
Objetivos de aprendizado:

A invasão de sistemas é um dos objetivos mais importantes e, às vezes, o objetivo final de um invasor. 
O invasor adquire informações por meio de técnicas como pegada, varredura, enumeração e análise de vulnerabilidade
e, em seguida, usa essas informações para hackear o sistema alvo. 
Este módulo se concentrará nas ferramentas e técnicas usadas por um invasor para hackear o sistema alvo.
Ao final deste módulo, você será capaz de fazer o seguinte:

• Explicar as diferentes técnicas para obter acesso a um sistema
• Aplicar técnicas de escalonamento de privilégios
• Explicar diferentes técnicas para obter e manter acesso remoto a um sistema
• Descrever diferentes tipos de rootkits
• Explicar técnicas de esteganografia e esteganálise
• Aplicar diferentes técnicas para ocultar as evidências de comprometimento
• Aplicar várias contramedidas de invasão de sistema

Demonstrar diferentes técnicas de quebra de senha e exploração de vulnerabilidade para obter acesso ao sistema.

Ganhando acesso:

Conforme discutido no Módulo 01, a metodologia de hacking  inclui várias etapas que os invasores seguem para hackear sistemas. 
As seções a seguir discutem essas etapas com mais detalhes. 
A primeira etapa envolve o uso de diversas técnicas pelos invasores para obter acesso ao sistema alvo. 
Essas técnicas incluem quebra de senhas, exploração de buffer overflows e exploração de vulnerabilidades identificadas.

Cracking Passwords:

Autenticação Microsoft
Quando os usuários fazem login em um computador Windows, uma série de etapas são executadas para autenticação do usuário. 
O sistema operacional Windows autentica seus usuários com a ajuda de três mecanismos (protocolos) fornecidos pela Microsoft.

Security Accounts Manager (SAM) Database:

O Windows usa o banco de dados Security Accounts Manager (SAM) ou o banco de dados do Active Directory para gerenciar contas
de usuário e senhas em formato hash (um hash unidirecional). 
O sistema não armazena as senhas em formato de texto simples, 
mas em formato hash, para protegê-las de ataques. O sistema implementa o banco de dados SAM como um arquivo de registro, 
e o kernel do Windows
obtém e mantém um bloqueio exclusivo do sistema de arquivos no arquivo SAM. 
Como este arquivo consiste em um bloqueio de sistema de arquivos, 
isso fornece alguma medida de segurança para o armazenamento de senhas.
Não é possível copiar o arquivo SAM para outro local no caso de ataques online. 
Como o sistema bloqueia o arquivo SAM com um bloqueio de sistema de arquivos 
exclusivo, um usuário não pode copiá-lo ou movê-lo
enquanto o Windows estiver em execução. O bloqueio não é liberado até que o 
sistema gere uma exceção de tela azul ou o sistema operacional seja desligado.
No entanto, para disponibilizar os hashes de senha para ataques de força bruta off-line, 
os invasores podem despejar o conteúdo do disco do arquivo SAM usando várias técnicas. 
O arquivo SAM usa uma função SYSKEY (no Windows NT 4.0 e versões posteriores)
para criptografar parcialmente os hashes de senha.
Mesmo que os hackers usem técnicas de subterfúgio para descobrir o conteúdo, 
as chaves criptografadas com hash unidirecional dificultam o hack. Além disso, 
algumas versões possuem uma chave secundária, o que torna a criptografia específica para aquela cópia do SO.

NTLM Authentication:

NT LAN Manager {NTLM) é um esquema de autenticação padrão que executa a autenticação usando uma estratégia de desafio/resposta. 
Como não depende de nenhuma especificação de protocolo oficial, não há garantia de que funcione de forma eficaz em todas as situações. 
Além disso, tem sido utilizado em algumas instalações do Windows, onde funcionou com sucesso. 
A autenticação NTLM consiste em dois protocolos: protocolo de autenticação NTLM e protocolo de autenticação LAN Manager (LM). 
Esses protocolos utilizam diferentes metodologias de hash para armazenar as senhas dos usuários na base de dados SAM.

Kerberos Authentication:

Kerberos é um protocolo de autenticação de rede que fornece autenticação forte para aplicativos
cliente/servidor por meio de criptografia de chave secreta. Este protocolo fornece autenticação mútua, 
na qual tanto o servidor quanto o usuário verificam a identidade um do outro. 
As mensagens enviadas através do protocolo Kerberos são protegidas contra ataques de repetição e espionagem.
Kerberos emprega o Key Distribution Center (KDC), que é um terceiro confiável. 
Este consiste em duas partes logicamente distintas: um servidor de autenticação (AS) 
e um servidor de concessão de tickets (TGS). Kerberos usa “tickets” para provar a identidade de um usuário.
A Microsoft atualizou seu protocolo de autenticação padrão para Kerberos, que fornece uma autenticação
mais forte para aplicativos cliente/servidor do que o NTLM.

Como as senhas hash são armazenadas no Windows SAM?:

Os sistemas operacionais Windows usam um arquivo de banco de dados Security Account Manager (SAM) para armazenar senhas de usuários. 
O arquivo SAM é armazenado em %SystemRoot%/system32/config/SAM em sistemas Windows e o Windows o monta no registro na seção de registro HKLM/SAM. 
Ele armazena senhas com hash LM ou NTLM.

NTLM substitui o hash LM, que é suscetível a cracking. Novas versões do Windows ainda oferecem suporte a hashes LM para compatibilidade com versões 
anteriores no entanto, o Vista e versões posteriores do Windows desativam os hashes LM por padrão. O hash LM está em branco nas versões mais recentes do
Windows. Selecionar a opção para remover hashes LM permite uma verificação adicional durante operações de alteração de senha, mas não limpa imediatamente
os valores de hash LM do SAM. O arquivo SAM armazena um valor "fictício" em seu banco de dados, que não tem relação com a senha real do usuário e é o
mesmo para todas as contas de usuário. Não é possível calcular hashes LM para senhas com mais de 14 caracteres. Assim, o valor hash LM é definido como
um valor "fictício" quando um usuário ou administrador define uma senha com mais de 14 caracteres.


Observação: os hashes LM estão desabilitados no Windows Vista e em sistemas operacionais Windows posteriores; LM está em branco nesses sistemas.

•	NTLM Authentication Process
•	Processo de autenticação NTLM

O NTLM inclui três métodos de autenticação de resposta a desafio: LM, NTLMvl e NTLMv2, todos os quais usam a mesma técnica para autenticação. A única diferença

entre eles é o nível de criptografia. Na autenticação NTLM, o cliente e o servidor negociam um protocolo de autenticação. Isso é feito por meio do Provedor de
Suporte de Segurança (SSP) negociado


As etapas a seguir demonstram o processo e o fluxo de autenticação de cliente para um controlador de domínio usando qualquer protocolo NTLM:
O cliente digita o nome de usuário e a senha na janela de logon.

• O Windows executa a senha por meio de um algoritmo hash e gera um hash para a senha inserida na janela de logon.

• O computador cliente envia uma solicitação de login juntamente com um nome de domínio ao controlador de domínio.
• O controlador de domínio gera uma cadeia de caracteres aleatórios de 16 bytes chamada "nonce", que é enviada ao computador cliente.
• O computador cliente criptografa o nonce com um hash da senha do usuário e o envia de volta ao controlador de domínio.
• O controlador de domínio recupera o hash da senha do usuário do SAM e o utiliza para criptografar o nonce.
 O controlador de domínio compara então o valor criptografado com o valor recebido do cliente. Um valor correspondente autentica o cliente e o logon é bem-sucedido.

 Observação: a Microsoft atualizou seu protocolo de autenticação padrão para Kerberos, que fornece uma autenticação mais forte para aplicativos cliente/servidor do que o NTLM.

Autenticação Kerberos:

Kerberos é um protocolo de autenticação de rede que fornece autenticação forte para aplicativos cliente/servidor por meio de criptografia de
chave secreta, que fornece autenticação mútua. Tanto o servidor quanto o usuário verificam a identidade um do outro. As mensagens enviadas 
através deste protocolo são protegidas contra ataques de repetição e espionagem.

Kerberos emprega o KDC, que é um terceiro confiável, e consiste em duas partes logicamente distintas: um AS e um TGS. O mecanismo de
autorização do Kerberos fornece ao usuário um ticket de concessão de ticket (TGT) que serve pós-autenticação para acesso posterior a 
serviços específicos,

Single Sign-On através do qual o usuário não precisa digitar novamente a senha para acessar quaisquer serviços autorizados. Notavelmente,
não há comunicação direta entre os servidores de aplicativos e o KDC; os tickets de serviço, mesmo embalados pela TGS, só chegam ao serviço
através do cliente que se dispõe a acessá-los.

Password Cracking:

A quebra de senha é o processo de recuperação de senhas de dados transmitidos por um sistema de computador ou de dados nele armazenados. O
objetivo de quebrar uma senha pode ser ajudar um usuário a recuperar uma senha esquecida ou perdida, como medida preventiva pelos
administradores do sistema para verificar senhas facilmente quebráveis ​​ou para uso por um invasor para obter acesso não autorizado ao
sistema.
A invasão geralmente começa com tentativas de quebra de senha. Uma senha é uma informação importante necessária para acessar um sistema.
Conseqüentemente, a maioria dos invasores utiliza técnicas de quebra de senha para obter acesso não autorizado. Um invasor pode quebrar uma 
senha manualmente, adivinhando-a, ou usar ferramentas e técnicas automatizadas, como um dicionário ou um método de força bruta. A maioria
das técnicas de quebra de senhas são bem-sucedidas devido a senhas fracas ou facilmente adivinháveis.

Tipos de ataques de senha:

A quebra de senha é um dos estágios cruciais da invasão do sistema. Os mecanismos de quebra de senhas muitas vezes exploram meios legais
para obter acesso não autorizado ao sistema, como recuperar a senha esquecida de um usuário. A classificação dos ataques de senha depende
das ações do invasor, que são dos quatro tipos a seguir:

• Ataques Não-Eletrônicos: 
Esta é, na maioria dos casos, a primeira tentativa do invasor de obter senhas do sistema alvo. Ataques não eletrônicos ou não técnicos não
exigem nenhum conhecimento técnico sobre hacking ou exploração de sistemas. As técnicas usadas para realizar ataques não eletrônicos
incluem navegação no ombro, engenharia social, mergulho em lixeiras, etc.


• Ataques on-line ativos:
essa é uma das maneiras mais fáceis de obter acesso não autorizado ao sistema em nível de administrador. Aqui, o invasor se comunica com a
máquina alvo para obter acesso por senha. As técnicas usadas para realizar ataques on-line ativos incluem adivinhação de senha, ataques de 
dicionário e de força bruta, pulverização de senha, ataque de máscara, injeção de hash, envenenamento LLMNR/NBT-NS, uso de Trojans/spyware/
keyloggers, ataques de monólogos internos, ataques de cadeia de Markov. , quebra de senha Kerberos, etc.


• Ataques on-line passivos: um ataque passivo é um tipo de ataque ao sistema que não leva a nenhuma alteração no sistema. Neste ataque, o
invasor não precisa se comunicar com o sistema, mas monitorar ou registrar passivamente os dados que passam pelo canal de comunicação de e
para o sistema. Os dados são então usados ​​para invadir o sistema. As técnicas usadas para realizar ataques on-line passivos incluem wire
sniffing, ataques man-in-the-middle, ataques de repetição, etc.

Ataques offline: Os ataques offline referem-se a ataques de senha nos quais um invasor tenta recuperar senhas em texto não criptografado a 
partir de um despejo de hash de senha. Os invasores usam hashes pré-computados de tabelas arco-íris para realizar ataques de rede offline e 
distribuídos.

Ataques não eletrônicos:
Existem três tipos de ataques não eletrônicos: engenharia social, surf de ombro e mergulho em lixeiras.

Engenharia social:
Na segurança de computadores, a engenharia social é usada para denotar um tipo de intrusão não técnica que explora o comportamento humano.
Normalmente, depende muito da interação humana e muitas vezes envolve enganar outras pessoas para que violem os procedimentos normais de
segurança. Um engenheiro social executa um "jogo de trapaça" para quebrar os procedimentos de segurança. Por exemplo, um invasor que 
utilize engenharia social para invadir uma rede de computadores pode tentar ganhar a confiança do usuário autorizado para acessar a rede 
alvo e depois extrair informações para comprometer a segurança da rede. A engenharia social é, na verdade, um ensaio usado para obter
informações confidenciais enganando ou influenciando as pessoas. Um invasor pode se disfarçar de usuário ou administrador de sistema para
obter a senha do usuário. Os engenheiros sociais exploram o facto de que as pessoas, em geral, tentam construir relações amigáveis ​​com 
os seus amigos e colegas e tendem a ser prestáveis ​​e de confiança. Outra característica da engenharia social reside na incapacidade
das pessoas de acompanhar uma cultura que depende fortemente da tecnologia da informação. A maioria das pessoas não tem consciência do 
valor das informações que possuem e, como tal, apenas algumas se preocupam em proteger as suas informações. Os engenheiros sociais 
normalmente vasculham lixeiras para adquirir informações valiosas. Além disso, os engenheiros sociais consideram mais difícil obter a 
combinação de um cofre ou de um cacifo de um clube de saúde, em comparação com o caso de uma palavra-passe. A melhor defesa é educar, 
treinar e conscientizar sobre esse ataque e o valor da informação.

• Surf de ombro:
A navegação no ombro é uma técnica de roubo de senhas, pairando perto dos usuários legítimos e observando-os inserir suas senhas. Nesse tipo
de ataque, o invasor observa o teclado ou a tela do usuário enquanto ele faz login e monitora a que o usuário se refere ao inserir sua
senha, por exemplo, um objeto em sua mesa em busca de senhas escritas ou mnemônicos. No entanto, este ataque só pode ser executado quando 
o atacante está próximo do alvo.
Esse ataque também pode ser realizado nas filas de caixas de supermercados, por exemplo, quando uma vítima em potencial passa um cartão de 
débito e insere o PIN (Número de Identificação Pessoal) necessário. Um PIN normalmente tem quatro dígitos e isso facilita a execução do 
ataque.

•Mergulhar na lixeira:
O "mergulho no lixo" é um método de ataque chave que emprega falhas significativas na segurança do computador no sistema alvo. As 
informações confidenciais que as pessoas desejam, protegem e protegem com devoção podem ser acessadas por quase qualquer pessoa disposta a 
realizar buscas no lixo. Procurar no lixo é um tipo de ataque de baixa tecnologia com inúmeras implicações. 
Mergulhar em lixeiras era bastante popular na década de 1980. O próprio termo refere-se à coleta de informações gerais úteis de lixões, como
latas de lixo, contêineres junto ao meio-fio e lixeiras. Ainda hoje, invasores curiosos e/ou mal-intencionados às vezes encontram mídias
descartadas com arquivos de senhas, manuais, relatórios, recibos, números de cartão de crédito ou outros documentos confidenciais.
A análise de resíduos de lixões pode ajudar os invasores a obter acesso não autorizado aos sistemas alvo, e há amplas evidências que apoiam 
esse conceito. A equipe de suporte muitas vezes despeja informações confidenciais sem prestar atenção a quem poderá acessá-las 
posteriormente. As informações assim recolhidas podem então ser utilizadas pelos atacantes para realizar outros tipos de ataques, como 
engenharia social.

Dictionary Attack:

Um arquivo de dicionário é carregado no aplicativo de cracking que é executado em contas de usuário

Brute-Force Attack:

O programa tenta todas as combinações de caracteres até que a senha seja quebrada

Rule-based:

Este ataque é usado quando o invasor obtém alguma informação sobre a senha

Online Tools to Search Default Passwords:
https://www.fortypoundheod.com 
https://cirt.net
http://www.defaultpassword.us 
https://www.rauterpasswards.com 
https://default-password.info 
https://192-168-1-lip.mobi 


Active Online Attacks:

■ Ataque de dicionário
Neste tipo de ataque, um arquivo de dicionário é carregado em um aplicativo de cracking que é executado em contas de usuários. Este dicionário é um arquivo de texto que 
contém várias palavras de dicionário comumente usadas como senhas. O programa usa todas as palavras presentes no dicionário para encontrar a senha. Além de um dicionário 
padrão, os dicionários de um invasor contêm entradas com números e símbolos adicionados às palavras (por exemplo, "3 de dezembro! 962"}. Rolos simples de dedos no teclado 
("qwer0987"}, que muitos acreditam produzir senhas aleatórias e seguras, são incluídos em tal dicionário. Ataques de dicionário são mais úteis do que ataques de força 
bruta, no entanto, os primeiros não podem ser realizados em sistemas que usam senhas. 

Este ataque é aplicável em duas situações:

o Em criptoanálise, para descobrir a chave de descriptografia para obter o texto simples de um texto cifrado

o Em segurança de computador, para ignorar a autenticação e acessar o mecanismo de controle do computador adivinhando senhas

Métodos para melhorar o sucesso de um ataque de dicionário:

o Uso de vários dicionários diferentes, como dicionários técnicos e estrangeiros, o que aumenta o número de possibilidades

o Uso de manipulação de strings junto com o dicionário (por exemplo, se o dicionário contém a palavra "system", a manipulação de strings cria anagramas como "metsys",
entre outros}

Brute-Force Attack:

• Ataque de força bruta:
Em um ataque de força bruta, os invasores tentam todas as combinações de caracteres até que a senha seja quebrada. Algoritmos criptográficos devem ser suficientemente 
reforçados para evitar um ataque de força bruta, que é definido pela RSA da seguinte forma: "Busca exaustiva de chaves, ou busca de força bruta, é a técnica básica para 
tentar todas as chaves possíveis até que a chave correta seja identificada."
Um ataque de força bruta é quando alguém tenta produzir todas as chaves de criptografia para dados para detectar as informações necessárias. Mesmo hoje, apenas aqueles 
com poder de processamento suficiente poderiam executar com sucesso esse tipo de ataque.
A criptoanálise é um ataque de força bruta na criptografia que emprega uma busca do espaço de chaves. Em outras palavras, testar todas as chaves possíveis é uma das 
tentativas de recuperar o texto simples usado para produzir um texto cifrado específico. A detecção de uma chave ou texto simples que seja mais rápido do que um ataque de
 força bruta é uma maneira de quebrar a cifra. Uma cifra é segura se não houver nenhum método para quebrá-la além de um ataque de força bruta. Em geral, todas as cifras 
 são deficientes em prova matemática de segurança. Se o usuário escolher chaves aleatoriamente ou pesquisar aleatoriamente, o texto simples ficará disponível em média 
 depois que o sistema tiver tentado metade de todas as chaves possíveis.
Algumas das considerações para ataques de força bruta são as seguintes:
o É um processo demorado
o Todas as senhas serão eventualmente encontradas

• Ataque baseado em regras:
Os invasores usam esse tipo de ataque quando obtêm alguma informação sobre a senha. Este é um ataque mais poderoso do que ataques de dicionário e força bruta porque o 
cracker sabe o tipo de senha. Por exemplo, se o invasor sabe que a senha contém um número de dois ou três dígitos, ele/ela pode usar algumas técnicas específicas para 
extrair a senha rapidamente.
Ao obter informações úteis, como o método em que números e/ou caracteres especiais foram usados ​​e o comprimento da senha, os invasores podem minimizar o tempo 
necessário para quebrar a senha e, portanto, aprimorar a ferramenta de cracking. Esta técnica envolve força bruta, um dicionário e ataques de sílaba.

Para ataques de quebra de senha online, um invasor às vezes usará uma combinação de força bruta e dicionário. Essa combinação se enquadra nas categorias de ataques de 
quebra de senha híbridos e silábicos.
o Ataque Híbrido:

Esse tipo de ataque depende do ataque de dicionário. Frequentemente, as pessoas mudam suas senhas apenas adicionando alguns números às suas senhas antigas. Nesse caso, o 
programa adicionaria alguns números e símbolos às palavras do dicionário para tentar quebrar a senha. Por exemplo, se a senha antiga for "system", então há uma chance de 
que a pessoa a altere para "systeml" ou "system2".

Ataque de sÃ­laba:
Os hackers usam essa tÃ©cnica de cracking quando as senhas nÃ£o sÃ£o palavras conhecidas. Os invasores usam o dicionario e outros mÃ©todos para quebra-las, bem como todas
 as combinaÃ§Ãµes possÃ­veis delas.

Ataque de pulverização de senha:
O ataque de pulverização de senha tem como alvo várias contas de usuário simultaneamente usando uma ou um pequeno conjunto de senhas comumente usadas. Ao contrário dos 
ataques de força bruta, que têm como alvo apenas contas de usuário específicas, um ataque de pulverização de senha tem como alvo todos os usuários dentro de um grupo de 
trabalho específico. Para executar esse ataque, os invasores se concentram principalmente em explorar a política de bloqueio de conta, que permite que os usuários usem 
várias senhas por um determinado período ou um certo número de tentativas antes que suas contas sejam bloqueadas. Os invasores inicialmente tentam uma única senha 
comumente usada em várias contas simultaneamente e esperam pela resposta antes de iniciar outra tentativa de senha nas mesmas contas. Eles continuam esse processo 
enquanto permanecem abaixo do limite de bloqueio para que possam tentar um grande número de senhas sem serem afetados por mecanismos de bloqueio automático. A 
pulverização de senha pode ser realizada em diferentes estágios por meio de portas comuns, como MSSQL (1433/TCP), SSH (22/TCP), FTP (21/TCP), SMB (445/TCP), Telnet (23/
TCP) e Kerberos (88/TCP).

CrackMapExec
Fonte: https://github.com
Os invasores usam a ferramenta CrackMapExec para automatizar o processo de quebra de senhas de um domínio inteiro ou senhas
de membros de um grupo de trabalho usando um pequeno conjunto de

senhas usadas armazenadas em um arquivo .txt. O comando a seguir executa o toai CrackMapExec com as senhas armazenadas no arquivo passwords.txt:
crackmapexec smb <IP> -u users.txt -p passwords.txt
Execute o comando a seguir para verificar se o bloqueio ocorreu durante o processo de pulverização:
spray.sh -smb <targetIP> <usernameList> <passwordList>
<AttemptsPerLockoutPeriod> <LockoutPeriodinMinutes> <DOMAIN>

A seguir estão alguns ataques adicionais de pulverização de senha:

o	Kerbrute (https://github.com)
o	lnvoke-DomainPasswordSpray (https://github.com)
o	Spray (https://github.com)
o	Omnispray (https://github.com)

Ataque de Máscara:
O ataque de máscara é semelhante aos ataques de força bruta, mas recupera senhas de hashes com um conjunto mais específico de caracteres com base em informações 
conhecidas pelo invasor. Os ataques de força bruta consomem tempo porque o invasor tenta todas as combinações possíveis de caracteres para quebrar a senha. Em contraste, 
em um ataque de máscara, o invasor usa um padrão de senha para restringir a lista de senhas possíveis e reduzir o tempo de quebra.

hashcat:
Fonte: https://hashcat.net
Os invasores usam a ferramenta hashcat para executar ataques de senha, como ataques de força bruta, ataques de dicionário e ataques de máscara. Para executar ataques de 
máscara, um invasor deve saber os sinalizadores usados ​​para o charset integrado, charset personalizado e modo de ataque para criar um padrão apropriado para a senha.

Charsets integrados
O seguinte charset integrado ajuda a especificar o tipo de caractere a ser usado:
• ?l = abcdefghijklmnopqrstuvwxyz
• ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ
• ?d = 0123456789
• ?h = 0123456789abcdef
• ?H = 0123456789ABCDEF
• ?s = «space» ! 11 #$%&' () *+, -. /: ;<=>?@ [\] "_ '{I}~
• ?a = ?l?u?d?s
- 0xff
?b = 0x00

Charset personalizado
Um charset personalizado é usado em situações em que o invasor não tem certeza sobre o tipo de caractere em um espaço reservado específico:

	-1 abcdefghijklmnopqrstuvwxyz0123456789
	-1 abcdefghijklmnopqrstuvwxyz?d
	-1 ?10123456789
	-1 ?l?d

Modo Hash
Os invasores usam o sinalizador -m com hashcat para especificar o modo hash, ou seja, o tipo de hash a ser quebrado, como MDS, NTML ou SHA256. 

Execute o comando a seguir para quebrar senhas que contenham seis caracteres, em que os três primeiros são letras minúsculas e os três últimos caracteres são números. O 
padrão de senha parece ser ?l ?l ?l ?d?d?d.
hashcat -a 3 -m O md5 hashes.txt ?l?l?l?d?d?d

- a  Especifica o modo de ataque, que é 3 aqui {ataque de força bruta)
- m Especifica o tipo de hash, que é O aqui {MDS)

Execute o comando a seguir para quebrar senhas com oito caracteres de comprimento, onde o primeiro caractere é uma letra maiúscula ou minúscula, os últimos quatro 
caracteres são dígitos, os dois primeiros dígitos são 1 e 9 e os caracteres restantes são letras minúsculas.
hashcat -a 3 -m O md5 hashes.txt -1 ?l?u ?1?1?1?119?d?d
-1 ?l ?u ➔ Especifica que o caractere é um alfabeto maiúsculo ou minúsculo
Para quebrar um hash de senha de comprimento desconhecido, use o sinalizador --increment fornecendo o comprimento máximo e mínimo da senha.
hashcat -m O -a 3 -i --increment-min=6 --increment-max=lO 53ab0dff8ecc7d5a18b4416d00568f02 ?l?l?l?l?l?l?l?l?l?l
--increment-min=6 ➔ O comprimento mínimo da senha é 6
--increment-max=lO ➔ O comprimento máximo da senha é 10

Adivinhação de senha
Adivinhação de senha é uma técnica de quebra de senha que envolve tentar fazer logon no sistema alvo com senhas diferentes manualmente. Adivinhação é o elemento-chave da 
quebra manual de senha. O invasor cria uma lista de todas as senhas possíveis a partir das informações coletadas por meio de engenharia social ou qualquer outro método e 
as tenta manualmente na máquina da vítima para quebrá-las.

A seguir estão as etapas envolvidas na adivinhação de senhas:

o Encontre um usuário válido
o Crie uma lista de senhas possíveis
o Classifique as senhas de alta para baixa probabilidade
o Digite cada senha, até que a senha correta seja descoberta

Hackers podem quebrar senhas manualmente ou usando ferramentas, métodos e algoritmos automatizados. Eles também podem automatizar a quebra de senhas usando um loop FOR 
simples ou criar um arquivo de script que tenta cada senha em uma lista. Essas técnicas ainda são consideradas quebra manual. A taxa de falha desse tipo de ataque é alta.

Algoritmo de quebra de senha manual
Em sua forma mais simples, esse algoritmo pode automatizar a adivinhação de senhas usando um loop FOR simples. No exemplo a seguir, um invasor cria um arquivo de texto 
simples com nomes de usuários e senhas e os itera usando o loop FOR.
O loop FOR principal pode extrair os nomes de usuários e senhas do arquivo de texto, que serve como um dicionário à medida que itera em cada linha:

[file: credentials.txt] 
administrator "" administrator 
password administrator 
administrator [Etc.] 

Digite os seguintes comandos para acessar o arquivo de texto de um diretório:


c:\>FOR /F tokens=l,2* 11 %i in (credentials.txt)"
More? do net use \\victim.com\IPC$ %j /u:victim.com\%i" 
More? 2>>nul" 
More? && echo %time% %date% >> outfile.txt" 
More? && echo \\victim.com acct: %i pass: %j >> outfile.txt 
c:\>type outfile.txt 

O arquivo outfile.txt contém o nome de usuário e a senha corretos, se o nome de usuário e a senha em credentials.txt estiverem corretos. Um invasor pode estabelecer uma 
sessão aberta com o servidor da vítima usando seu sistema.
Senhas padrão
As senhas padrão são aquelas fornecidas pelos fabricantes com novos equipamentos (por exemplo, switches, hubs, roteadores). Normalmente, as senhas padrão fornecidas pelos 
fabricantes de dispositivos protegidos por senha permitem que o usuário acesse o dispositivo durante a configuração inicial e, em seguida, altere a senha. No entanto, 
muitas vezes um administrador se esquece de definir a nova senha ou ignora a recomendação de alteração de senha e continua usando a senha original. Os invasores podem 
explorar esse lapso e encontrar a senha padrão para

o dispositivo alvo de sites do fabricante ou usando ferramentas online que mostram senhas padrão 
para acessar o dispositivo alvo com sucesso. Os invasores usam senhas padrão na lista de 
palavras ou dicionário que eles usam para executar ataques de adivinhação de senha.
A seguir estão algumas das opções online também É para pesquisar senhas padrão:

o	https://open-sez.me
o	https://www.fortypoundhead.com
o	https://cirt.net
o	http://www.defaultpassword.us
o	https://www.routerpasswords.com
o	https://default-password.info
o	https://192-168-1-lip.mobi

Trojans/Spyware/Keyloggers:
Um Trojan é um programa que se disfarça como um aplicativo benigno. O software inicialmente parece executar uma função desejável
ou benigna, mas, em vez disso, rouba informações ou danifica o sistema. Com um Trojan, os invasores podem obter 
acesso remoto e executar várias operações limitadas por privilégios de usuário no computador de destino.

Spyware é um tipo de malware que os invasores instalam em um computador para coletar secretamente informações sobre seus usuários sem o conhecimento deles. O spyware se 
esconde do usuário e pode ser difícil de detectar.
Um keylogger é um programa que registra todas as teclas digitadas pelo usuário sem o conhecimento do usuário. Os keyloggers enviam o log das teclas digitadas pelo usuário 
para a máquina de um invasor ou o escondem na máquina da vítima para recuperação posterior. O invasor então examina o log para encontrar senhas ou outras informações 
úteis que podem comprometer o sistema.
Um invasor instala um Trojan/spyware/keylogger na máquina de uma vítima para coletar seus nomes de usuário e senhas. Esses programas são executados em segundo plano e 
enviam todas as credenciais do usuário para o invasor.
Por exemplo, um keylogger no computador de uma vítima pode revelar o conteúdo de todos os e-mails do usuário. A imagem a seguir descreve um cenário que descreve como um 
invasor obtém acesso à senha usando um Trojan/spyware/keylogger.

Ataque de injeção de hash/passagem de hash (PtH)
Esse tipo de ataque é possível quando o sistema de destino usa uma função de hash como parte do processo de autenticação para autenticar seus usuários. Geralmente, o 
sistema armazena valores de hash das credenciais no banco de dados/arquivo SAM em um computador Windows. Nesses casos, o servidor calcula o valor de hash das credenciais 
enviadas pelo usuário ou permite que o usuário insira o valor de hash diretamente. O servidor então o verifica em relação ao valor de hash armazenado para autenticação.

Os invasores exploram esses mecanismos de autenticação e primeiro exploram o servidor de destino para recuperar os hashes dos bancos de dados SAM. Eles então inserem os 
hashes adquiridos diretamente no mecanismo de autenticação para autenticar com os hashes pré-computados roubados do usuário. Assim, em um ataque de injeção de hash/PtH,
os invasores injetam um hash LanMan (LM) ou NTLM comprometido em uma sessão local e então usam o hash para autenticar os recursos de rede. Qualquer servidor ou serviço 
(executando no Windows, UNIX ou qualquer outro sistema operacional) usando autenticação NTLM ou LM é suscetível a esse ataque. Esse ataque pode ser iniciado em qualquer 
sistema operacional, mas o Windows pode ser mais vulnerável devido ao seu recurso Single-Sign-On (SSO) que armazena senhas dentro do sistema e permite que os usuários 
acessem todos os recursos com um login único.
Diferentes técnicas são usadas para executar um ataque de injeção de hash/PtH:

o O invasor tenta comprometer privilégios de administrador para capturar valores de cache dos hashes de senha do usuário do banco de dados de conta de usuário local ou 
SAM. No entanto, o uso offline desses hashes em cache pode ser restringido pelo administrador da rede. Portanto, essa abordagem pode nem sempre ser viável.

o O invasor despeja os hashes de senha do banco de dados de conta de usuário local ou SAM para recuperar hashes de senha de usuários locais e obtém acesso a contas de 
administrador para comprometer outros sistemas conectados.
o O invasor captura mensagens de desafio-resposta LM ou NTLM entre o cliente e o servidor para extrair hashes criptografados por meio de força bruta.

o O invasor recupera as credenciais de usuários locais, bem como aquelas pertencentes ao domínio de segurança do processo lsass.exe do Windows.

O hacker realiza esse ataque implementando as cinco etapas a seguir:

 O hacker compromete uma estação de trabalho/servidor usando um exploit local/remoto.
 O hacker extrai hashes armazenados usando ferramentas como pwdump7, Mimikatz, etc. e encontra um hash de conta de administrador de domínio.
 O hacker usa ferramentas como Mimikatz para colocar um dos hashes recuperados em seu processo lsass.exe local e então usa o hash para fazer logon em qualquer sistema 
(controlador de domínio) com as mesmas credenciais.
 O hacker extrai todos os hashes do banco de dados do Active Directory e agora pode comprometer qualquer conta no domínio.

Envenenamento LLMNR/NBT-NS
LLMNR (Link Local Multicast Name Resolution) e NBT-NS (NetBIOS Name Service) são dois elementos principais dos sistemas operacionais Windows usados ​​para executar a 
resolução de nomes para hosts presentes no mesmo link. Esses serviços são habilitados por padrão nos sistemas operacionais Windows.
Quando o servidor DNS falha em resolver consultas de nomes, o host executa uma transmissão UDP não autenticada perguntando a todos os hosts se alguém tem um nome que ele 
está procurando. Como o host que tenta se conectar está seguindo uma transmissão não autenticada e

processo, torna-se fácil para um invasor escutar passivamente uma rede para transmissões LLMNR (porta UDP 5355) e NBT-NS (porta UDP 137) e responder à solicitação 
fingindo ser um host alvo. Após aceitar uma conexão com um host, o invasor pode utilizar ferramentas como Responder.py ou Metasploit para encaminhar a solicitação para um 
servidor desonesto (por exemplo, TCP: 137) para executar um processo de autenticação.
Durante o processo de autenticação, o invasor envia um hash NTLMv2 para o servidor desonesto, que foi obtido do host tentando se autenticar. Esse hash é armazenado em um 
disco e pode ser quebrado usando ferramentas de quebra de hash offline, como hashcat ou John the Ripper. Uma vez quebradas, essas credenciais podem ser usadas para fazer 
login e obter acesso ao sistema host legítimo.
Etapas envolvidas no envenenamento LLMNR/NBT-NS:


1. O usuário envia uma solicitação para se conectar ao sistema de compartilhamento de dados, \ \DataServer, que ele digitou erroneamente como \ \DtaServr.
2. O \ \DataServer responde ao usuário, dizendo que não conhece o host chamado\ \DtaServr.
3. O usuário então executa uma transmissão LLMNR/NBT-NS para descobrir se alguém na rede conhece o nome do host\ \DtaServr.
4. O invasor responde ao usuário dizendo que é \ \DataServer, aceita o hash NTLMv2 do usuário e responde ao usuário com um errar.

LLMNR/NBT-NS Poisoning Tools:
Responder
Source: https://github.com
Responder is an LLMNR, NBT-NS, and MDNS poisoner. lt responds to specific NBT-NS 
(NetBIOS Name Service) queries based on their name suffix. By default, the toai only

responde a uma solicitação do File Server Service, que é para 5 MB. Conforme mostrado nas capturas de tela, os invasores usam o Responder toai para extrair informações 
como a versão do sistema operacional do sistema alvo, a versão do cliente, o endereço IP do cliente NTLM, o nome de usuário NTLM e o hash da senha.

Ataque de monólogo interno:

O ataque de monólogo interno é semelhante ao ataque realizado usando Mimikatz, exceto que a área de memória do processo Local Security Authority Subsystem Service (LSASS) 
não é despejada, evitando assim o Windows Credential Guard e o antivírus. Mimikatz é uma toai pós-exploração, por meio da qual os invasores podem extrair senhas de texto 

simples, tíquetes Kerberos e hashes NTLM da memória do processo LSASS. Os invasores usam Mimikatz

para recuperar credenciais de usuário da memória do processo LSASS, e as informações adquiridas os ajudam a executar o movimento lateral na fase pós-exploração.
Um ataque de monólogo interno geralmente é executado em um ambiente seguro onde o Mimikatz não pode ser executado. Neste ataque, usando a Security Support Provider 
Interface (SSPI) de um aplicativo de modo de usuário, uma chamada de procedimento local para o pacote de autenticação NTLM é invocada para calcular a resposta NetNTLM no 
contexto do usuário conectado.
Etapas para executar um ataque de monólogo interno:

1. O invasor desabilita os controles de segurança do NetNTLMvl modificando os valores de LMCompatibilitylevel, NTLMMinClientSec e RestrictSendingNTLMTraffic.

2. O invasor extrai todos os tokens de logon não relacionados à rede de todos os processos ativos para se disfarçar como usuários legítimos.

3. Agora, o invasor interage com o NTLM SSP localmente, para cada usuário mascarado obter uma resposta NetNTLMvl ao desafio escolhido no contexto de segurança desse 
usuário.
4. Agora, o invasor restaura LMCompatibilityLevel, NTLMMinClientSec e RestrictSendingNTLMTraffic para seus valores reais.
5. O invasor usa tabelas rainbow para quebrar o hash NTLM das respostas capturadas.
6. Finalmente, o invasor usa os hashes quebrados para obter acesso em nível de sistema.

Cracking Kerberos Password
Kerberos é o protocolo de autenticação mais comumente usado para entidades de rede. Devido à sua ampla aceitação, ele é suscetível a vários ataques. Os invasores 
desenvolveram várias maneiras de hackear o Kerberos e explorar suas vulnerabilidades para quebrar senhas fracas, injetar códigos maliciosos e obter informações sobre a 
infraestrutura de rede e várias entidades de rede. Os invasores têm como alvo o protocolo de autenticação Kerberos de duas maneiras comuns: ou seja, quebrando o TGS, 
conhecido como Kerberoasting, e quebrando o TGT, conhecido como AS-REP Roasting.

AS-REP Roasting {Cracking TGT)

o AS-REP Roasting {Cracking TGT)
Neste ataque, os invasores solicitam um tíquete de autenticação (TGT) do KDC na forma de um pacote AS-REQ. Se a conta do usuário existir, o KDC responde com um TGT 
criptografado com as credenciais da conta. Isso permite que os invasores recebam um tíquete criptografado, que pode ser salvo offline e posteriormente quebrado para obter 
a senha. Os invasores podem executar esse tipo de ataque tanto ativa quanto passivamente. Em um cenário ativo, os invasores geram uma mensagem AS-REP para o usuário, 
enquanto em um cenário passivo, os invasores observam uma mensagem AS-REP.
Na autenticação Kerberos, o modo de pré-autenticação é habilitado por padrão e é projetado para evitar ataques de adivinhação de senha offline. Portanto, para executar um 
ataque ASREP Roasting, os invasores devem identificar contas de usuário com o modo de pré-autenticação desabilitado, ou seja, a conta de usuário deve ser definida como 
"Não exigir autenticação Kerberos". Os invasores usam ferramentas como Rubeus para executar ataques de AS-REP Roasting.
As seguintes etapas estão envolvidas no AS-REP Roasting:
1. O invasor identifica uma conta de usuário com a opção de pré-autenticação desabilitada.
2. Em nome do usuário, o invasor solicita um tíquete de autenticação (TGT) do controlador de domínio ou KDC.
3. O controlador de domínio verifica a conta do usuário e responde com um TGT criptografado com as credenciais da conta.
4. O invasor armazena o TGT offline e o quebra para extrair a senha da conta do usuário e acessar ainda mais a entidade de rede (aqui, o servidor de aplicativos).


o Kerberoasting {Cracking TGS)
Neste ataque, os invasores solicitam um TGS para o nome principal do serviço (SPN) da conta de serviço de destino. Esta solicitação é feita ao controlador de domínio 
usando um tíquete de autenticação de usuário de domínio válido (TGT). O controlador de domínio não tem nenhum registro; se o usuário acessou os recursos de rede, ele 
apenas pesquisa o SPN no Active Directory e responde com um tíquete criptografado usando uma conta de serviço vinculada ao SPN. O tipo de criptografia usado para o 
tíquete de serviço solicitado (ST) é RC4_HMAC_MDS, o que indica que para criptografar o ST, o hash de senha NTLM é usado. Para quebrar o ST, os invasores exportam os 
tíquetes TGS da memória e os salvam offline no sistema local. Além disso, os invasores usam diferentes hashes NTLM para quebrar o ST e, ao quebrá-lo com sucesso, a senha 
da conta de serviço pode ser descoberta. Os invasores usam toeis como Kerberoast para executar ataques Kerberoasting na autenticação Kerberos.
As seguintes etapas estão envolvidas no Kerberoasting:
1. Em nome de um usuário, o invasor solicita um tíquete de autenticação (TGT) do controlador de domínio ou KDC.
2. O controlador de domínio verifica a conta do usuário e responde com um TGT criptografado.
3. Com um tíquete de autenticação de usuário (TGT) válido, o invasor solicita o TGS.
4. O controlador de domínio verifica o TGT e responde com um tíquete TGS.
5. O invasor armazena o tíquete TGS offline e o quebra para extrair a senha da conta de serviço e acessar ainda mais a entidade de rede (aqui, o servidor de aplicativos).

• Ataque Pass-the-Ticket
Pass-the-ticket é uma técnica usada para autenticar um usuário em um sistema que está usando tickets Kerberos sem fornecer a senha do usuário. A autenticação Kerberos 
permite que os usuários acessem serviços fornecidos por servidores remotos sem a necessidade de fornecer senhas para cada serviço solicitado. Para executar esse ataque, o 
invasor despeja tickets Kerberos de contas legítimas usando ferramentas de despejo de credenciais.
Um TGT ou ST pode ser capturado com base no nível de acesso permitido a um cliente. Aqui, o ST permite acesso a recursos específicos, e o TGT é usado para enviar uma 
solicitação ao TGS para que o ST acesse todos os serviços que o cliente foi autorizado a acessar.
Os tickets Silver são capturados para recursos que usam Kerberos para o processo de autenticação e podem ser usados ​​para criar tickets para chamar um serviço específico 
e acessar o sistema que oferece o serviço.
Os tickets Golden são capturados para o domínio com o hash KDS KRBTGT NTLM que permite a criação de TGTs para qualquer perfil no Active Directory.
Os invasores lançam ataques pass-the-ticket roubando o ST/TGT de uma máquina de usuário final e usando-o para se disfarçar como um usuário válido, ou roubando o ST/TGT de 
um AS comprometido. Após obter um desses tickets, um invasor pode obter acesso não autorizado aos serviços de rede e procurar por permissões adicionais e dados críticos.
Os invasores usam ferramentas como Mimikatz, Rubeus, Windows Credentials Editor, etc. para lançar ataques pass-the-ticket:
o Mimikatz
Fonte: https://github.com
O Mimikatz permite que os invasores passem o Kerberos TGT para outros computadores e façam login usando o ticket da vítima. A ferramenta também ajuda a extrair senhas de 
texto simples, hashes, códigos PIN e tickets Kerberos da memória. É uma ferramenta de código aberto que permite que qualquer pessoa veja e armazene dados de autenticação, 
como tickets Kerberos. Os invasores podem aproveitar isso para escalonamento de privilégios e roubo de credenciais.

Other Active Online Attacks:

• Ataque Combinador
Em um ataque combinador, os invasores combinam as entradas do primeiro dicionário com as do segundo dicionário. A lista resultante de entradas pode ser usada para 
produzir nomes completos e palavras compostas. Os invasores usam essa lista de palavras para quebrar uma senha no sistema de destino e obter acesso não autorizado aos 
arquivos do sistema.
Etapas envolvidas em um ataque combinador:
o Encontre um usuário alvo válido.
o Crie seus próprios dois dicionários ou baixe dois dicionários de lista de palavras diferentes de fontes online.
o Crie uma lista de palavras final mesclando entradas de dois dicionários separados. Por exemplo, se o primeiro dicionário contiver 100 palavras e o segundo dicionário 
contiver 70 palavras, o dicionário mesclado conterá 100 x 70 = 7000 palavras.
o Use ferramentas automatizadas, como hashcat, para quebrar a senha do usuário alvo.

Os invasores realizam esse tipo de quebra de senha em uma situação em que uma frase aleatória de palavras é usada como procedimento padrão de geração de senha.

Fingerprint Attack:

Em um ataque de impressão digital, a frase-senha é dividida em impressões digitais que consistem em combinações de caracteres simples e múltiplos que um usuário alvo pode 
escolher como sua senha. Por exemplo, para uma palavra 'senha', essa técnica criaria impressões digitais "p", "a", "s", "s", "w", "o", "r", "d", "pa", "ss", "wo", "rd", 
etc. Os invasores geralmente realizam esse ataque para quebrar senhas complexas, como "pass-10".
Para realizar esse ataque, os invasores criam uma lista de hashes de senha exclusivos de um banco de dados de hashes de senha vazado e, em seguida, realizam um ataque de 
força bruta para obter uma lista de palavras e iniciar o ataque de impressão digital.

PRINCE Attack:

Um ataque PRobability INfinite Chained Elements (PRINCE) é uma versão avançada de um ataque combinador no qual, em vez de pegar entradas de dois dicionários diferentes, 
os invasores usam um único dicionário de entrada para construir cadeias de palavras combinadas. Essa cadeia pode ter entre 1 e n palavras do dicionário de entrada 
concatenadas para formar uma cadeia de palavras. Por exemplo, se o comprimento dos caracteres a serem adivinhados for 5, as seguintes combinações serão criadas a partir 
do dicionário de entrada:

3-letter word + 2-letter word 2-letter word + 3-letter word 1-letter word + 4-letter word ... etc. 

■ Ataque de alternância de maiúsculas e minúsculas
Em um ataque de alternância de maiúsculas e minúsculas, os invasores tentam todas as combinações possíveis de maiúsculas e minúsculas de uma palavra presente no 
dicionário de entrada. Por exemplo, se uma palavra no dicionário de entrada for "xyz", o seguinte conjunto de combinações será gerado:
Xyz
Xyz
XYz
XYZ
xYz
... etc.
A taxa de sucesso desse ataque é baixa pelos seguintes motivos:
o Se os usuários usarem letras maiúsculas, eles as usam em primeiro lugar ou entre as palavras
o Em outros casos, os usuários usam um número menor ou igual de letras maiúsculas do que letras minúsculas

• Ataque de cadeia de Markov:
Em ataques de cadeia de Markov, os invasores reúnem um banco de dados de senhas e dividem cada entrada de senha em sílabas de dois e três caracteres (2 gramas e 3 
gramas); usando esses elementos de caracteres, um novo alfabeto é desenvolvido, que é então correspondido ao banco de dados de senhas existente.
Na fase inicial deste ataque, os invasores definem um parâmetro de limite para as ocorrências dos elementos, e apenas as letras presentes no novo alfabeto que ocorreram 
pelo menos o número mínimo de vezes são selecionadas. Além disso, esta técnica combina as letras selecionadas em palavras com um comprimento máximo de oito caracteres, e 
então um ataque de dicionário é realizado para quebrar a senha alvo.
• Ataque baseado em GPU:
Unidades de processamento gráfico (GPUs) são circuitos especializados usados ​​em dispositivos de computação avançados para exibir gráficos. GPUs também podem ser usadas 
por navegadores da web para agilizar o processamento de aplicativos em data centers e ambientes de nuvem.
GPUs são baseadas em APIs multiplataforma, como OpenGL, que podem ser acessadas por qualquer aplicativo no dispositivo com credenciais ou permissões de nível de usuário. 
Como dispositivos de computação como laptops ou desktops são configurados com drivers gráficos e bibliotecas por padrão, ataques baseados em GPU podem ser iniciados por 
meio de suas APIs.
Para executar um ataque baseado em GPU, os invasores inicialmente realizam engenharia social para enganar a vítima e fazê-la baixar um programa ou aplicativo malicioso. 
Então, o programa malicioso permite que os invasores rastreiem secretamente as atividades do usuário no navegador e executem vazamentos de canal lateral para roubar 
senhas.
O funcionamento de um ataque de GPU é o seguinte:
o O invasor atrai ou força a vítima a visitar um site inseguro ou baixar um aplicativo carregado com malware em seu sistema.
o Quando a vítima instala o aplicativo carregado com malware, o malware começa a acessar a API OpenGL do navegador.
o O malware na API OpenGL configura um espião no dispositivo para rastrear atividades no navegador.
o Quando a vítima acessa qualquer site por meio do navegador, os invasores podem copiar todos os caracteres inseridos pela vítima no campo de senha do site.

Passive Online Attacks:
Wire Sniffing

Packet sniffing é uma forma de wire sniffing ou escuta telefônica na qual hackers farejam credenciais durante o trânsito capturando pacotes da Internet. 
Os invasores raramente usam sniffers para executar esse tipo de ataque. Com o packet sniffing, um invasor pode obter senhas para aplicativos como

como e-mail, sites, 5MB, FTP, sessões rlogin ou SQL. Como os sniffers rodam em segundo plano, a vítima permanece inconsciente do sniffing.

À medida que os sniffers coletam pacotes na camada de link de dados, eles podem capturar todos os pacotes na LAN da máquina que executa o programa sniffer. 
Esse método é relativamente difícil de perpetrar e 
computacionalmente complicado. Isso ocorre porque uma rede com um hub implementa um meio de transmissão que todos os sistemas compartilham na LAN. 
A LAN envia os dados para todas as máquinas conectadas a ela. Se um 
invasor executar um sniffer em um sistema na LAN, ele/ela pode coletar dados enviados de e para qualquer outro sistema na LAN. 
A maioria dos toais sniffer são ideais para farejar dados em um ambiente de hub. Esses 
toais são sniffers passivos, pois esperam passivamente pela transferência de dados antes de capturar as informações. 
Eles são eficientes em coletar dados imperceptivelmente da LAN. Os dados capturados podem incluir 
senhas enviadas para sistemas remotos durante FTP, sessões de rlogin e correio eletrônico. 
O invasor usa essas credenciais farejadas para obter acesso não autorizado ao sistema de destino. Há uma variedade de 
ferramentas disponíveis na Internet para detecção passiva de fios.

Ataques Man-in-the-Middle/Manipulator-in-the-Middle e Replay
Quando duas partes estão se comunicando, um ataque man-in-the-middle/manipulator-in-the-middle (MITM) pode ocorrer, 
no qual um terceiro intercepta uma comunicação entre as duas partes sem o conhecimento delas. O 
terceiro espiona o tráfego e o repassa. Para fazer isso, o "man in the middle" precisa farejar ambos os lados da conexão simultaneamente.
 Em um ataque MITM, o invasor adquire acesso aos canais de comunicação entre a 
vítima e o servidor para extrair as informações. Esse tipo de ataque é frequentemente usado em tecnologias telnet e sem fio.
 Não é fácil implementar esses ataques devido aos números de sequência TCP e à velocidade 
da comunicação. Esse método é relativamente difícil de perpetrar e às vezes pode ser quebrado invalidando o tráfego.

Em um ataque de repetição, pacotes e tokens de autenticação são capturados usando um sniffer. Após a informação relevante ser extraída, 
os tokens são colocados de volta na rede para obter acesso. O invasor usa esse tipo de ataque para repetir transações bancárias.
ou tipos semelhantes de transferência de dados, na esperança de replicar e/ou alterar atividades, como depósitos bancários ou transferências.

Ataques Offline:
Ataques offline ocorrem quando um invasor verifica a validade das senhas. O invasor observa como a senha é armazenada. 
Se os nomes de usuário e senhas forem armazenados em um arquivo legível, é fácil para o invasor obter acesso ao sistema. 
Portanto, é importante proteger a lista de senhas e mantê-la em um formato ilegível, de preferência criptografado.

Ataques offline: geralmente consomem tempo, mas tÃªm uma alta taxa de sucesso, pois os hashes de senha
podem ser revertidos devido ao seu pequeno keyspace e comprimento curto. Notavelmente, 
diferentes tÃ©cnicas de quebra de senha estÃ£o disponÃ­veis na Internet.
Dois exemplos de ataques offline sÃ£o os seguintes:

1.	Rainbow table attack
2.	Distributed Network Attack

Ataque Rainbow Table
Um ataque rainbow table usa a técnica de troca criptoanalítica de tempo-memória, que requer menos tempo do que outras técnicas. Ele usa informações já calculadas 
armazenadas na memória para quebrar a criptografia. No ataque rainbow table, o invasor cria uma tabela de todas as senhas possíveis e seus respectivos valores de hash, 
conhecida como rainbow table, com antecedência.
Rainbow Table: Uma rainbow table é uma tabela pré-computada que contém listas de palavras como arquivos de dicionário e listas de força bruta e seus valores de hash. É 
uma tabela de consulta usada especialmente para recuperar uma senha de texto simples de um texto cifrado. O invasor usa essa tabela para procurar a senha e tenta 
recuperá-la de hashes de senha.
Hashes computados: Um invasor computa o hash para uma lista de senhas possíveis e o compara com a tabela de hash pré-computada (rainbow table). Se os invasores 
encontrarem uma correspondência, eles podem quebrar a senha.
Compare os Hashes: Um invasor captura o hash de uma senha e o compara com a tabela de hashes pré-computada. Se uma correspondência for encontrada, a senha será quebrada. 
É fácil recuperar senhas comparando os hashes de senha capturados com as tabelas pré-computadas.
Exemplos de hashes pré-computados:

Ferramenta para criar tabelas Rainbow: rtgen
Fonte: http://project-rainbowcrack.com
RainbowCrack é uma implementação de propósito geral que aproveita a técnica de troca de tempo
e memória para quebrar hashes. Este projeto permite que você quebre uma senha com hash.

Os invasores usam o rtgen toai deste projeto para gerar as tabelas rainbow. Conforme mostrado na captura de tela,
o programa rtgen precisa de vários parâmetros para gerar uma tabela rainbow.
A sintaxe da linha de comando é:
Sintaxe:rtgen hash_algorithm charset plaintext len ​​min
plaintext_len_max table index chain len chain_num part_index

• Ataque de rede distribuída
Um Ataque de rede distribuída (DNA) é uma técnica usada para recuperar arquivos protegidos por senha que utilizam o poder de processamento não utilizado de máquinas 
espalhadas pela rede para descriptografar senhas. Neste ataque, o invasor instala um gerenciador de DNA em um local central onde máquinas executando clientes de DNA podem 
acessá-lo por uma rede. O gerenciador de DNA coordena o ataque e atribui pequenas porções da pesquisa de chaves a máquinas distribuídas pela rede. O cliente de DNA é 
executado em segundo plano, ocupando apenas o tempo de processamento que não foi utilizado. O programa combina as capacidades de processamento de todos os clientes 
conectados à rede e as usa para quebrar a senha. Os invasores usam o Password Recovery Toolkit (PRTK), que é equipado com DNA toeis, para executar este ataque.
Os recursos de um DNA são os seguintes:
o Lê estatísticas e gráficos facilmente
o Adiciona dicionários de usuário para quebrar uma senha
o Otimiza ataques de senha para idiomas específicos
o Modifica os dicionários de usuário
o Inclui a funcionalidade de instalação do cliente furtivo
o Atualiza automaticamente o cliente enquanto atualiza o servidor de DNA

O DNA pode ser classificado em dois módulos:
o Interface do servidor DNA
A interface do servidor DNA permite que os usuários gerenciem o DNA de um servidor. O módulo do servidor DNA fornece ao usuário o status de todos os trabalhos que o 
servidor DNA está executando. A interface contém os seguintes trabalhos:
• Trabalhos atuais: a fila de trabalhos atual consiste em todos os trabalhos adicionados à lista pelo controlador. A lista de trabalhos atual tem muitas colunas, como o 
número de identificação atribuído pelo DNA ao trabalho, o nome do arquivo criptografado, a senha do usuário, a senha que corresponde a uma chave que pode desbloquear os 
dados, o status do trabalho e várias outras colunas.
• Trabalhos concluídos: a lista de trabalhos concluídos fornece informações sobre os trabalhos de descriptografia, incluindo a senha. Também tem muitas colunas 
semelhantes à lista de trabalhos atual. Essas colunas incluem o número de identificação atribuído pelo DNA ao trabalho, o nome do arquivo criptografado, o caminho 
descriptografado do arquivo, a chave usada para criptografar e descriptografar o arquivo, a data e a hora em que o servidor DNA começou a trabalhar no trabalho, a data e 
a hora em que o servidor DNA terminou de trabalhar no trabalho, o tempo decorrido, etc.
o Interface do cliente DNA
Os usuários podem usar a interface do cliente DNA de muitas estações de trabalho. A interface ajuda as estatísticas do cliente a coordenar facilmente e está disponível em 
máquinas com o aplicativo cliente DNA pré-instalado. Existem vários componentes, como o nome do cliente DNA, o nome do grupo ao qual o cliente DNA pertence e as 
estatísticas sobre o trabalho atual.

Gerenciamento de rede
A caixa de diálogo Tráfego de rede auxilia na descoberta da velocidade de rede que o DNA usa e cada comprimento de unidade de trabalho do cliente DNA. Usando o 
comprimento da unidade de trabalho, um cliente DNA pode trabalhar sem contatar o servidor DNA. O aplicativo cliente DNA pode contatar o servidor DNA no início e no fim do 
comprimento da unidade de trabalho.
O usuário pode monitorar a fila de status de trabalho e o DNA. Após coletar os dados da caixa de diálogo Tráfego de rede, o usuário pode modificar o trabalho do cliente. 
Quando o tamanho do comprimento da unidade de trabalho aumenta, a velocidade do tráfego de rede diminui. Uma diminuição na velocidade do tráfego faz com que o cliente que
trabalha nos trabalhos gaste mais tempo. Portanto, o usuário pode fazer menos solicitações ao servidor devido à redução na largura de banda do tráfego de rede.

Ferramentas de recuperação de senha
As ferramentas de recuperação de senha permitem que invasores quebrem senhas complexas, 
recuperem chaves de criptografia fortes e desbloqueiem vários documentos.

Elcomsoft Distributed Password Recovery
Fonte: https://www.elcomsoft.com
O aplicativo Elcomsoft Distributed Password Recovery permite que invasores quebrem senhas complexas, 
recuperem chaves de criptografia fortes e desbloqueiem documentos em um ambiente de produção.
Os invasores podem usar esta ferramenta para recuperar as senhas do sistema de destino para obter 
acesso não autorizado aos arquivos críticos e outros softwares do sistema.

Alguns dos métodos de recuperação de senha também estão listados a seguir:

•	Password Recovery Toolkit (https://accessdata.com)
•	Passware Kit Forensic (https://www.passware.com)
•	hashcat (https://hashcat.net)
•	Windows Password Recovery Tool (https://www.windowspasswordsrecovery.com)
•	PCUnlocker (https://www.top-password.com)

pwdump7
Fonte: https://www. ta rasco. org
pwdump7 é um aplicativo que despeja os hashes de senha (funções unidirecionais ou OWFs) do banco de dados SAM do NT. pwdump extrai hashes de senha LM e NTLM de contas de 
usuários locais do banco de dados do Security Account Manager (SAM). Este aplicativo ou ferramenta é executado extraindo o arquivo binário SAM e SYSTEM do sistema de 
arquivos e, em seguida, extrai os hashes. Um dos recursos mais poderosos do pwdump7 é que ele também é capaz de despejar arquivos protegidos. O pwdump7 também pode 
extrair senhas offline selecionando os arquivos de destino. O uso deste programa requer privilégios administrativos no sistema remate.

Conforme mostrado na captura de tela, os invasores usam essas ferramentas para extrair hashes de senha do sistema alvo.

Algumas das ferramentas adicionais para extrair hashes de senha são as seguintes:

•	Mimikatz (https://github.com)
•	Powershell Empire (https://github.com)
•	DSlnternals PowerShell (https://github.com)
•	Ntdsxtract (https://github.com)

Observação: o uso das ferramentas acima requer privilégios administrativos no sistema remate.

Cracking de senha usando a Domain Password Audit Tool (DPAT)
Fonte: https://github.com
DPAT é um script Python que gera estatísticas de uso de senha a partir de hashes de senha despejados de um controlador de domínio (DC) 
e um arquivo de crack de senha, como hashcat.pot, gerado usando a ferramenta hashcat durante o cracking de senha. 
Ele também gera um relatório HTML com links clicáveis. Um invasor pode abrir cada link e analisar nomes de usuários, 
senhas atuais e outras estatísticas de senha.
Inicialmente, um invasor despeja arquivos de hash LM e NT do DC usando os privilégios de administrador comprometidos, 
após o que o invasor quebra esses hashes LM e os carrega no arquivo de lista de senhas usando DPAT.
Etapas para quebrar senhas usando DPAT

• Etapa 1: execute o comando a seguir para despejar os hashes de senha do controlador de domínio (DC). Isso requer espaço suficiente na unidade C para armazenar a saída. 
ntdsutil "ao in ntds" "ifm" "cr fu c:\temp" q
• Etapa 2: o dump contém dois arquivos, Active Directory\ntds.dit e registry\SVSTEM. Agora, converta o formato do arquivo de saída para o formato aceito pela ferramenta 
DPAT usando o script Python secretsdump.py:
secretsdump.py -system registry/SYSTEM -ntds "Active Directory/ntds.dit" LOCAL -outputfile users
Este script armazena o arquivo de saída no formato users. ntds.
- history ➔ Este sinalizador pode ser incluído no comando acima para visualizar o histórico de senhas no relatório.

• Etapa 3: Crie um arquivo de crack de senha no formato suportado pelo DPAT toai. O DPAT toai suporta os formatos de arquivo dos toais hashcat e John the Ripper.
Execute o seguinte comando para crackear hashes LM de users. ntds no formato hashcat. pot:
. /hashcat .bin -m 3000 -a 3 users .ntds -1 ?a ?1 ?1 ?1 ?1 ?1 ?1 ?1 - increment
Para crackear hashes LM usando John the Ripper, execute o seguinte comando:
john --format=LM users.ntds
• Etapa 4: Agora, execute o script DPAT com os argumentos -h ou --help para visualizar todas as opções disponíveis.

• Etapa 5: Em seguida, execute o script DPAT dpat.py com users.ntds e hashcat.pot como entradas.
dpat.py -n customer.ntds -e hashcat.pot
- n ➔ Representa hashes extraídos do controlador de domínio (DC)
- e ➔ Lista de senhas quebradas geradas usando o hashcat tool
Conforme mostrado na captura de tela, a saída do comando acima é um relatório HTML com opções clicáveis, que pode ser aberto no navegador padrão.

Etapa 6: Agora, clique na opção Detalhes para visualizar mais informações sobre diferentes senhas. Por exemplo, 
clique na opção Detalhes ao lado de Histórico de Senhas para visualizar o histórico de senhas usadas anteriormente, conforme mostrado na captura de tela.

Ferramentas de quebra de senha
Ferramentas de quebra de senha permitem que você redefina senhas desconhecidas ou perdidas de administrador local do Windows, 
administrador de domínio e outras contas de usuário. No caso de senhas esquecidas, elas ainda permitem que os usuários 
acessem instantaneamente seus computadores bloqueados sem reinstalar o Windows. Os invasores também podem usar 
a quebra de senha para quebrar as senhas do sistema de destino.

LOphtCrack
Fonte: https://gitlab.com
LOphtCrack é uma toai projetada para auditar senhas e recuperar aplicativos. 
Ele recupera senhas perdidas do Microsoft Windows com a ajuda de um dicionário, 
híbrido, rainbow table e ataques de força bruta, e também verifica a força da senha.
Conforme mostrado na captura de tela, os invasores usam o LOphtCrack para quebrar a 
senha do alvo para obter acesso ao sistema.

ophcrack
Fonte: http://ophcrack.sourceforge.net
ophcrack é uma ferramenta de quebra de senhas do Windows que usa tabelas rainbow para quebrar senhas. 
Ela vem com uma interface gráfica de usuário (GUI) e roda em diferentes sistemas operacionais, como Windows, Linux/UNIX, etc.
Como mostrado na captura de tela, os invasores usam ophcrack para executar ataques de força bruta e quebrar hashes de senha do sistema alvo.

RainbowCrack
Fonte: http://project-rainbowcrack.com
O RainbowCrack quebra hashes com tabelas rainbow, usando um algoritmo de troca de tempo-memória. Um cracker de força bruta tradicional quebra hashes de uma maneira 
diferente daquela seguida por um cracker de hash de troca de tempo-memória. O cracker de hash de força bruta tenta todos os textos simples possíveis um após o outro 
durante o cracking. Em contraste, o RainbowCrack pré-calcula todos os pares de hash de texto simples possíveis no algoritmo de hash selecionado, conjunto de caracteres e 
comprimento de texto simples com antecedência e os armazena em um arquivo "tabela arco-íris". Pode levar muito tempo para pré-calcular as tabelas, mas uma vez que o 
pré-cálculo é concluído, é possível quebrar o texto cifrado nas tabelas rainbow de forma fácil e rápida. Conforme mostrado na captura de tela, os invasores usam o 
RainbowCrack para quebrar os hashes de senha do sistema de destino.

Algumas ferramentas para quebrar senhas são listadas a seguir:

•	John the Ripper (https://www.openwall.com)
•	hashcat (https://hashcat.net)
•	THC-Hydra (https://github.com)
•	Medusa (http://foofus.net)
•	Secure Shell Bruteforcer (https://github.com)

Salting de senha
Saltamento de senha é uma técnica na qual sequências aleatórias de caracteres são adicionadas a uma senha antes de calcular os hashes. 
Isso torna mais difícil reverter os hashes e ajuda a derrotar ataques de hash pré-calculados. Quanto maior a sequência aleatória, mais difícil se torna quebrar ou 
decifrar a senha. A sequência aleatória de caracteres deve ser uma combinação de caracteres alfanuméricos.
Em criptografia, um "salt" consiste em bits de dados aleatórios usados ​​como entrada para uma função unidirecional, sendo o outro uma senha. Em vez de senhas, a saída da 
função unidirecional pode ser armazenada e usada para autenticar usuários. Um salt combina com uma senha por uma função de derivação de chave para gerar uma chave para 
uso com uma cifra ou outro algoritmo criptográfico. Essa técnica gera hashes diferentes para a mesma senha, o que dificulta a quebra de senha.

Observação: os hashes de senha do Windows não são saltados.

Como se defender contra quebra de senha
As melhores práticas para se proteger contra quebra de senha são as seguintes:

• Habilite a auditoria de segurança de informações para monitorar e rastrear ataques de senha.
• Não use a mesma senha durante uma alteração de senha.
• Restrinja o uso de senhas e padrões semelhantes para contas multi-pie.

• Não compartilhe senhas.
• Não use senhas que podem ser encontradas em um dicionário.
• Não use protocolos de texto simples ou protocolos com criptografia fraca.
• Defina a política de alteração de senha para 30 dias.
• Evite armazenar senhas em um local desprotegido.
• Não use nenhuma senha padrão do sistema.
• Torne as senhas difíceis de adivinhar usando de 8 a 12 caracteres alfanuméricos, com uma combinação de letras maiúsculas e minúsculas, números e símbolos. Isso ocorre 
porque senhas mais fortes são mais difíceis de quebrar. Portanto, quanto mais complexa a senha, menos vulnerável ela é a ataques.
• Certifique-se de que os aplicativos não armazenem senhas na memória nem as gravem no disco em texto simples. As senhas são sempre vulneráveis ​​a roubo se forem 
armazenadas na memória. Uma vez que a senha é conhecida, é extremamente fácil para os invasores escalarem seus direitos no aplicativo.
• Use uma sequência aleatória (salt) como prefixo ou sufixo de senha antes de executar a criptografia. Isso anula a pré-computação e a memorização. Como o sal geralmente 
é diferente para cada indivíduo, é impraticável para invasores construir tabelas com uma única versão criptografada de cada senha candidata. Os sistemas Unix geralmente 
usam um conjunto de 12 bits.
• Habilite o SYSKEY com uma senha forte para criptografar e proteger o banco de dados do Security Account Manager (SAM). Normalmente, as informações de senha das contas 
de usuário são armazenadas no banco de dados SAM. É muito fácil para o software de quebra de senha atingir o banco de dados SAM para acessar senhas. O SYSKEY protege as 
informações de senha armazenadas no banco de dados SAM contra software de quebra de senha por meio de técnicas de criptografia fortes. Senhas criptografadas são mais 
difíceis de quebrar do que as não criptografadas.
• Nunca use informações pessoais (por exemplo, data de nascimento ou nome do cônjuge, filho ou animal de estimação) para criar senhas. Caso contrário, é fácil para 
aqueles próximos ao usuário quebrarem as senhas do usuário.
• Monitore os logs do servidor para ataques de força bruta em contas de usuário. Embora os ataques de força bruta sejam difíceis de parar, eles são facilmente detectáveis 
​​se o log do servidor web for monitorado. Para cada tentativa de login malsucedida, um código de status HTTP 401 é registrado nos logs do servidor web.
• Bloqueie contas que foram submetidas a um número excessivo de tentativas incorretas de senha. Isso fornece proteção contra ataques de força bruta e adivinhação.
• Muitos farejadores de senha podem ser bem-sucedidos se um gerenciador de LAN e autenticação NTLM forem usados. Desabilite os protocolos de autenticação NTLM e 
gerenciador de LAN somente após garantir que isso não afete a rede.
• Realize uma auditoria periódica de senhas na organização.
• Verifique qualquer aplicativo suspeito que armazene senhas na memória ou as grave no disco.
• Sistemas sem patch podem redefinir senhas durante estouro de buffer ou ataques de negação de serviço (DoS). Certifique-se de que o sistema esteja atualizado.
• Examine se a conta está em uso, excluída ou desabilitada. Desabilite a conta do usuário se várias tentativas de login com falha forem detectadas.
• Habilite o bloqueio de conta com um certo número de tentativas, tempo de contador e duração do bloqueio.
• Uma das maneiras mais eficazes de gerenciar senhas em organizações é definir uma redefinição de senha automatizada.
• Torne o sistema protegido por senha B105, principalmente em dispositivos suscetíveis a ameaças físicas, como servidores e laptops.
• Treine os funcionários para frustrar táticas de engenharia social, como shoulder surfing e dumpster diving, que são usadas para roubar credenciais do usuário.
• Configure políticas de senha sob o objeto de Política de Grupo no Windows.
• Execute a triagem de senha quando novas senhas forem criadas para evitar o uso de senhas comuns.
• Use autenticação de dois fatores ou multifator; por exemplo, use CAPTCHA para evitar ataques automatizados em sistemas de informações críticas.
• Proteja e controle o acesso físico aos sistemas para evitar ataques de senha offline.
• Garanta que os arquivos do banco de dados de senhas sejam criptografados e acessíveis somente por administradores de sistema.
• Mascare a exibição de senhas na tela para evitar ataques de shoulder-surfing.
• Execute análises contínuas do comportamento do usuário e análises de ponto cego.
• Empregue contas de bloqueio geográfico para restringir usuários de fazer login de diferentes locais ou endereços IP.
• Empregue programas que monitorem a web em busca de senhas vazadas. Examine se as senhas vazadas estão em uso; se sim, altere-as sem demora.
• Renomeie contas com altos privilégios, como contas de administrador, para proteger contra programas automatizados de adivinhação de senhas.

Como se defender contra envenenamento por LLMNR/NBT-NS:

A maneira mais fácil de evitar que um sistema seja atacado por um criminoso é desabilitar os serviços LMNR e NBT-NS
no sistema operacional Windows. Os invasores empregam esses serviços para obter credenciais do usuário
e obter acesso não autorizado ao sistema do usuário.
Etapas para desabilitar LLMNR/NBT-NS em qualquer versão do Windows:

• Desabilitando LMBNR
o Abra o Editor de Política de Grupo Local.
o Navegue até Política de Computador Local ➔ Configuração do Computador ➔ Modelos Administrativos ➔ Rede ➔ Cliente DNS.
o No Cliente DNS, clique duas vezes em Desativar resolução de nome multicast.
o Selecione o botão de opção Ativado e clique em OK.

• Desabilitando NBT-NS
o Abra o Contrai Panei, navegue até Rede e Internet ➔ Central de Rede e Compartilhamento e clique na opção Alterar configurações do adaptador no lado direito.
o Clique com o botão direito do mouse no adaptador de rede e clique em Propriedades, selecione TCP/1Pv4 e clique em Propriedades.
o Na guia Geral, vá para Avançado ➔ WINS.
o Nas opções de configuração do NetBIOS, marque o botão de opção "Desabilitar NetBIOS sobre TCP/IP" e clique em OK.

Algumas contramedidas adicionais para se defender contra o envenenamento por LLMNR/NBT-NS são as seguintes:

• Controle o tráfego LLMNR, NBT-NS e mDNS usando ferramentas de segurança baseadas em host.
• Implemente a assinatura de 5 MB para evitar ataques de retransmissão.
• Implante uma ferramenta de monitoramento de spoofing LLMNR/NBT-NS.
• Monitore o host nas portas UDP 5355 e 137 para tráfego LLMNR e NBT-NS.
• Monitore IDs de eventos específicos, como 4697 e 7045, que podem ser indicadores de ataques de retransmissão.

Monitore quaisquer alterações feitas no registro DWORD HKLM\Software\Policies\Microsoft\Windows NT\DNSC1ient.

Ferramentas para detectar envenenamento LLMNR/NBT-NS:
Administradores de rede e profissionais de segurança cibernética usam ferramentas como Vindicate, 
gotresponded e Respounder para detectar ataques de envenenamento LLMNR/NBT-NS.

Vindicate
Fonte: https://github.com
Vindicate é um kit de ferramentas de detecção de spoofing LLMNR/NBNS/mDNS para administradores de rede. Profissionais de segurança usam este toai para detectar spoofing de serviço de 
nomes. Este toai os ajuda a detectar e isolar rapidamente invasores em sua rede. Ele foi projetado para detectar o uso de toais de hacking, como Responder, lnveigh, NBNSpoof e 
spoofers LLMNR, NBNS e mDNS do Metasploit, evitando falsos positivos. Ele explora o log de eventos do Windows para integração rápida com uma rede do Active Directory.

Respounder
Fonte: https://github.com
O Respounder detecta a presença de um responder na rede. Profissionais de segurança usam essa ferramenta para 
identificar máquinas comprometidas antes que hackers explorem hashes de senha. Essa ferramenta também ajuda 
profissionais de segurança a detectar hosts desonestos executando o responder em redes Wi-Fi públicas, por exemplo, 
em aeroportos e aeroportos, e evitar ingressar em tais redes.

Vulnerability Exploitation:

1. Identifique a vulnerabilidade
Os invasores identificam as vulnerabilidades que existem no sistema de destino usando várias técnicas discutidas nos módulos anteriores. Essas técnicas incluem footprinting e 
reconhecimento, varredura, enumeração e análise de vulnerabilidade. Depois de identificar os sistemas operacionais usados ​​e os serviços vulneráveis ​​em execução no sistema de 
destino, os invasores também usam vários sites de exploração online, como Exploit Database (https://www.exploit-db.com) e Packet Storm (https://packetstormsecuríty.com) para detectar 
vulnerabilidades em sistemas operacionais e aplicativos subjacentes.
2. Determine o risco associado à vulnerabilidade
Após identificar uma vulnerabilidade, os invasores determinam o risco associado à vulnerabilidade, ou seja, se a exploração dessa vulnerabilidade sustenta as medidas de segurança no 
sistema de destino.
3. Determine a capacidade da vulnerabilidade
Se o risco for baixo, os invasores podem determinar a capacidade de explorar essa vulnerabilidade para obter acesso remoto ao sistema de destino.

4. Desenvolver o Exploit
Após determinar a capacidade da vulnerabilidade, os invasores usam exploits de sites de exploits online, como o Exploit Database (https://www.exploit-db.com), ou desenvolvem seus 
próprios exploits usando ferramentas de exploit como o Metasploit.
5. Selecionar o método de entrega - local ou remoto
Os invasores realizam a exploração remota em uma rede para explorar a vulnerabilidade existente no sistema remoto para obter acesso ao shell. Se os invasores tiverem acesso prévio ao 
sistema, eles realizam a exploração local para aumentar privilégios ou executar aplicativos no sistema de destino.
6. Gerar e entregar o Payload
Os invasores, como parte da exploração, geram ou selecionam payloads maliciosos usando ferramentas como o Metasploit e os entregam ao sistema remoto usando engenharia social ou por 
meio de uma rede. Os invasores injetam shellcode malicioso nos payloads, que, quando executados, estabelecem um shell remoto para o sistema de destino.
7. Obter acesso remoto
Após gerar o payload, os invasores executam o exploit para obter acesso remoto ao shell do sistema de destino. Agora, os invasores podem executar vários comandos maliciosos no shell 
remoto e controlar o sistema.

Exploit Sites:

Os invasores podem usar vÃ¡rios sites de exploraÃ§Ã£o, como Exploit Database, VulDB, etc., 
para descobrir vulnerabilidades e baixar ou desenvolver exploraÃ§Ãµes para executar exploração de remate no sistema alvo. Esses sites incluem detalhes das vulnerabilidades e explorações mais recentes

Exploit Database
Fonte: https://www.exploit-db.com
Exploit Database inclui detalhes das vulnerabilidades mais recentes presentes em vários sistemas operacionais, 
dispositivos, aplicativos, etc. Os invasores podem pesquisar o Exploit Database para descobrir 
vulnerabilidades no sistema alvo, baixar os exploits do banco de dados e usar ferramentas de exploração como o Metasploit para obter acesso remoto.

Vulners:
Fonte: https://vulners.com
Vulners.com é um banco de dados de segurança que contém descrições para uma grande quantidade de vulnerabilidades
de software em um formato legível por máquina. Referências cruzadas entre boletins e bancos de dados continuamente 
atualizados ajudam a manter-se a par das últimas ameaças de segurança.