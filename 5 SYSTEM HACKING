
Objetivos de aprendizado:

A invasão de sistemas é um dos objetivos mais importantes e, às vezes, o objetivo final de um invasor. 
O invasor adquire informações por meio de técnicas como pegada, varredura, enumeração e análise de vulnerabilidade
e, em seguida, usa essas informações para hackear o sistema alvo. 
Este módulo se concentrará nas ferramentas e técnicas usadas por um invasor para hackear o sistema alvo.
Ao final deste módulo, você será capaz de fazer o seguinte:

• Explicar as diferentes técnicas para obter acesso a um sistema
• Aplicar técnicas de escalonamento de privilégios
• Explicar diferentes técnicas para obter e manter acesso remoto a um sistema
• Descrever diferentes tipos de rootkits
• Explicar técnicas de esteganografia e esteganálise
• Aplicar diferentes técnicas para ocultar as evidências de comprometimento
• Aplicar várias contramedidas de invasão de sistema

Demonstrar diferentes técnicas de quebra de senha e exploração de vulnerabilidade para obter acesso ao sistema.

Ganhando acesso:

Conforme discutido no Módulo 01, a metodologia de hacking  inclui várias etapas que os invasores seguem para hackear sistemas. 
As seções a seguir discutem essas etapas com mais detalhes. 
A primeira etapa envolve o uso de diversas técnicas pelos invasores para obter acesso ao sistema alvo. 
Essas técnicas incluem quebra de senhas, exploração de buffer overflows e exploração de vulnerabilidades identificadas.

Cracking Passwords:

Autenticação Microsoft
Quando os usuários fazem login em um computador Windows, uma série de etapas são executadas para autenticação do usuário. 
O sistema operacional Windows autentica seus usuários com a ajuda de três mecanismos (protocolos) fornecidos pela Microsoft.

Security Accounts Manager (SAM) Database:

O Windows usa o banco de dados Security Accounts Manager (SAM) ou o banco de dados do Active Directory para gerenciar contas
de usuário e senhas em formato hash (um hash unidirecional). 
O sistema não armazena as senhas em formato de texto simples, 
mas em formato hash, para protegê-las de ataques. O sistema implementa o banco de dados SAM como um arquivo de registro, 
e o kernel do Windows
obtém e mantém um bloqueio exclusivo do sistema de arquivos no arquivo SAM. 
Como este arquivo consiste em um bloqueio de sistema de arquivos, 
isso fornece alguma medida de segurança para o armazenamento de senhas.
Não é possível copiar o arquivo SAM para outro local no caso de ataques online. 
Como o sistema bloqueia o arquivo SAM com um bloqueio de sistema de arquivos 
exclusivo, um usuário não pode copiá-lo ou movê-lo
enquanto o Windows estiver em execução. O bloqueio não é liberado até que o 
sistema gere uma exceção de tela azul ou o sistema operacional seja desligado.
No entanto, para disponibilizar os hashes de senha para ataques de força bruta off-line, 
os invasores podem despejar o conteúdo do disco do arquivo SAM usando várias técnicas. 
O arquivo SAM usa uma função SYSKEY (no Windows NT 4.0 e versões posteriores)
para criptografar parcialmente os hashes de senha.
Mesmo que os hackers usem técnicas de subterfúgio para descobrir o conteúdo, 
as chaves criptografadas com hash unidirecional dificultam o hack. Além disso, 
algumas versões possuem uma chave secundária, o que torna a criptografia específica para aquela cópia do SO.

NTLM Authentication:

NT LAN Manager {NTLM) é um esquema de autenticação padrão que executa a autenticação usando uma estratégia de desafio/resposta. 
Como não depende de nenhuma especificação de protocolo oficial, não há garantia de que funcione de forma eficaz em todas as situações. 
Além disso, tem sido utilizado em algumas instalações do Windows, onde funcionou com sucesso. 
A autenticação NTLM consiste em dois protocolos: protocolo de autenticação NTLM e protocolo de autenticação LAN Manager (LM). 
Esses protocolos utilizam diferentes metodologias de hash para armazenar as senhas dos usuários na base de dados SAM.

Kerberos Authentication:

Kerberos é um protocolo de autenticação de rede que fornece autenticação forte para aplicativos
cliente/servidor por meio de criptografia de chave secreta. Este protocolo fornece autenticação mútua, 
na qual tanto o servidor quanto o usuário verificam a identidade um do outro. 
As mensagens enviadas através do protocolo Kerberos são protegidas contra ataques de repetição e espionagem.
Kerberos emprega o Key Distribution Center (KDC), que é um terceiro confiável. 
Este consiste em duas partes logicamente distintas: um servidor de autenticação (AS) 
e um servidor de concessão de tickets (TGS). Kerberos usa “tickets” para provar a identidade de um usuário.
A Microsoft atualizou seu protocolo de autenticação padrão para Kerberos, que fornece uma autenticação
mais forte para aplicativos cliente/servidor do que o NTLM.

Como as senhas hash são armazenadas no Windows SAM?:

Os sistemas operacionais Windows usam um arquivo de banco de dados Security Account Manager (SAM) para armazenar senhas de usuários. 
O arquivo SAM é armazenado em %SystemRoot%/system32/config/SAM em sistemas Windows e o Windows o monta no registro na seção de registro HKLM/SAM. 
Ele armazena senhas com hash LM ou NTLM.

NTLM substitui o hash LM, que é suscetível a cracking. Novas versões do Windows ainda oferecem suporte a hashes LM para compatibilidade com versões 
anteriores no entanto, o Vista e versões posteriores do Windows desativam os hashes LM por padrão. O hash LM está em branco nas versões mais recentes do
Windows. Selecionar a opção para remover hashes LM permite uma verificação adicional durante operações de alteração de senha, mas não limpa imediatamente
os valores de hash LM do SAM. O arquivo SAM armazena um valor "fictício" em seu banco de dados, que não tem relação com a senha real do usuário e é o
mesmo para todas as contas de usuário. Não é possível calcular hashes LM para senhas com mais de 14 caracteres. Assim, o valor hash LM é definido como
um valor "fictício" quando um usuário ou administrador define uma senha com mais de 14 caracteres.


Observação: os hashes LM estão desabilitados no Windows Vista e em sistemas operacionais Windows posteriores; LM está em branco nesses sistemas.

•	NTLM Authentication Process
•	Processo de autenticação NTLM

O NTLM inclui três métodos de autenticação de resposta a desafio: LM, NTLMvl e NTLMv2, todos os quais usam a mesma técnica para autenticação. A única diferença

entre eles é o nível de criptografia. Na autenticação NTLM, o cliente e o servidor negociam um protocolo de autenticação. Isso é feito por meio do Provedor de
Suporte de Segurança (SSP) negociado


As etapas a seguir demonstram o processo e o fluxo de autenticação de cliente para um controlador de domínio usando qualquer protocolo NTLM:
O cliente digita o nome de usuário e a senha na janela de logon.

• O Windows executa a senha por meio de um algoritmo hash e gera um hash para a senha inserida na janela de logon.

• O computador cliente envia uma solicitação de login juntamente com um nome de domínio ao controlador de domínio.
• O controlador de domínio gera uma cadeia de caracteres aleatórios de 16 bytes chamada "nonce", que é enviada ao computador cliente.
• O computador cliente criptografa o nonce com um hash da senha do usuário e o envia de volta ao controlador de domínio.
• O controlador de domínio recupera o hash da senha do usuário do SAM e o utiliza para criptografar o nonce.
 O controlador de domínio compara então o valor criptografado com o valor recebido do cliente. Um valor correspondente autentica o cliente e o logon é bem-sucedido.

 Observação: a Microsoft atualizou seu protocolo de autenticação padrão para Kerberos, que fornece uma autenticação mais forte para aplicativos cliente/servidor do que o NTLM.

Autenticação Kerberos:

Kerberos é um protocolo de autenticação de rede que fornece autenticação forte para aplicativos cliente/servidor por meio de criptografia de
chave secreta, que fornece autenticação mútua. Tanto o servidor quanto o usuário verificam a identidade um do outro. As mensagens enviadas 
através deste protocolo são protegidas contra ataques de repetição e espionagem.

Kerberos emprega o KDC, que é um terceiro confiável, e consiste em duas partes logicamente distintas: um AS e um TGS. O mecanismo de
autorização do Kerberos fornece ao usuário um ticket de concessão de ticket (TGT) que serve pós-autenticação para acesso posterior a 
serviços específicos,

Single Sign-On através do qual o usuário não precisa digitar novamente a senha para acessar quaisquer serviços autorizados. Notavelmente,
não há comunicação direta entre os servidores de aplicativos e o KDC; os tickets de serviço, mesmo embalados pela TGS, só chegam ao serviço
através do cliente que se dispõe a acessá-los.

Password Cracking:

A quebra de senha é o processo de recuperação de senhas de dados transmitidos por um sistema de computador ou de dados nele armazenados. O
objetivo de quebrar uma senha pode ser ajudar um usuário a recuperar uma senha esquecida ou perdida, como medida preventiva pelos
administradores do sistema para verificar senhas facilmente quebráveis ​​ou para uso por um invasor para obter acesso não autorizado ao
sistema.
A invasão geralmente começa com tentativas de quebra de senha. Uma senha é uma informação importante necessária para acessar um sistema.
Conseqüentemente, a maioria dos invasores utiliza técnicas de quebra de senha para obter acesso não autorizado. Um invasor pode quebrar uma 
senha manualmente, adivinhando-a, ou usar ferramentas e técnicas automatizadas, como um dicionário ou um método de força bruta. A maioria
das técnicas de quebra de senhas são bem-sucedidas devido a senhas fracas ou facilmente adivinháveis.

Tipos de ataques de senha:

A quebra de senha é um dos estágios cruciais da invasão do sistema. Os mecanismos de quebra de senhas muitas vezes exploram meios legais
para obter acesso não autorizado ao sistema, como recuperar a senha esquecida de um usuário. A classificação dos ataques de senha depende
das ações do invasor, que são dos quatro tipos a seguir:

• Ataques Não-Eletrônicos: 
Esta é, na maioria dos casos, a primeira tentativa do invasor de obter senhas do sistema alvo. Ataques não eletrônicos ou não técnicos não
exigem nenhum conhecimento técnico sobre hacking ou exploração de sistemas. As técnicas usadas para realizar ataques não eletrônicos
incluem navegação no ombro, engenharia social, mergulho em lixeiras, etc.


• Ataques on-line ativos:
essa é uma das maneiras mais fáceis de obter acesso não autorizado ao sistema em nível de administrador. Aqui, o invasor se comunica com a
máquina alvo para obter acesso por senha. As técnicas usadas para realizar ataques on-line ativos incluem adivinhação de senha, ataques de 
dicionário e de força bruta, pulverização de senha, ataque de máscara, injeção de hash, envenenamento LLMNR/NBT-NS, uso de Trojans/spyware/
keyloggers, ataques de monólogos internos, ataques de cadeia de Markov. , quebra de senha Kerberos, etc.


• Ataques on-line passivos: um ataque passivo é um tipo de ataque ao sistema que não leva a nenhuma alteração no sistema. Neste ataque, o
invasor não precisa se comunicar com o sistema, mas monitorar ou registrar passivamente os dados que passam pelo canal de comunicação de e
para o sistema. Os dados são então usados ​​para invadir o sistema. As técnicas usadas para realizar ataques on-line passivos incluem wire
sniffing, ataques man-in-the-middle, ataques de repetição, etc.

Ataques offline: Os ataques offline referem-se a ataques de senha nos quais um invasor tenta recuperar senhas em texto não criptografado a 
partir de um despejo de hash de senha. Os invasores usam hashes pré-computados de tabelas arco-íris para realizar ataques de rede offline e 
distribuídos.

Ataques não eletrônicos:
Existem três tipos de ataques não eletrônicos: engenharia social, surf de ombro e mergulho em lixeiras.

Engenharia social:
Na segurança de computadores, a engenharia social é usada para denotar um tipo de intrusão não técnica que explora o comportamento humano.
Normalmente, depende muito da interação humana e muitas vezes envolve enganar outras pessoas para que violem os procedimentos normais de
segurança. Um engenheiro social executa um "jogo de trapaça" para quebrar os procedimentos de segurança. Por exemplo, um invasor que 
utilize engenharia social para invadir uma rede de computadores pode tentar ganhar a confiança do usuário autorizado para acessar a rede 
alvo e depois extrair informações para comprometer a segurança da rede. A engenharia social é, na verdade, um ensaio usado para obter
informações confidenciais enganando ou influenciando as pessoas. Um invasor pode se disfarçar de usuário ou administrador de sistema para
obter a senha do usuário. Os engenheiros sociais exploram o facto de que as pessoas, em geral, tentam construir relações amigáveis ​​com 
os seus amigos e colegas e tendem a ser prestáveis ​​e de confiança. Outra característica da engenharia social reside na incapacidade
das pessoas de acompanhar uma cultura que depende fortemente da tecnologia da informação. A maioria das pessoas não tem consciência do 
valor das informações que possuem e, como tal, apenas algumas se preocupam em proteger as suas informações. Os engenheiros sociais 
normalmente vasculham lixeiras para adquirir informações valiosas. Além disso, os engenheiros sociais consideram mais difícil obter a 
combinação de um cofre ou de um cacifo de um clube de saúde, em comparação com o caso de uma palavra-passe. A melhor defesa é educar, 
treinar e conscientizar sobre esse ataque e o valor da informação.

• Surf de ombro:
A navegação no ombro é uma técnica de roubo de senhas, pairando perto dos usuários legítimos e observando-os inserir suas senhas. Nesse tipo
de ataque, o invasor observa o teclado ou a tela do usuário enquanto ele faz login e monitora a que o usuário se refere ao inserir sua
senha, por exemplo, um objeto em sua mesa em busca de senhas escritas ou mnemônicos. No entanto, este ataque só pode ser executado quando 
o atacante está próximo do alvo.
Esse ataque também pode ser realizado nas filas de caixas de supermercados, por exemplo, quando uma vítima em potencial passa um cartão de 
débito e insere o PIN (Número de Identificação Pessoal) necessário. Um PIN normalmente tem quatro dígitos e isso facilita a execução do 
ataque.

•Mergulhar na lixeira:
O "mergulho no lixo" é um método de ataque chave que emprega falhas significativas na segurança do computador no sistema alvo. As 
informações confidenciais que as pessoas desejam, protegem e protegem com devoção podem ser acessadas por quase qualquer pessoa disposta a 
realizar buscas no lixo. Procurar no lixo é um tipo de ataque de baixa tecnologia com inúmeras implicações. 
Mergulhar em lixeiras era bastante popular na década de 1980. O próprio termo refere-se à coleta de informações gerais úteis de lixões, como
latas de lixo, contêineres junto ao meio-fio e lixeiras. Ainda hoje, invasores curiosos e/ou mal-intencionados às vezes encontram mídias
descartadas com arquivos de senhas, manuais, relatórios, recibos, números de cartão de crédito ou outros documentos confidenciais.
A análise de resíduos de lixões pode ajudar os invasores a obter acesso não autorizado aos sistemas alvo, e há amplas evidências que apoiam 
esse conceito. A equipe de suporte muitas vezes despeja informações confidenciais sem prestar atenção a quem poderá acessá-las 
posteriormente. As informações assim recolhidas podem então ser utilizadas pelos atacantes para realizar outros tipos de ataques, como 
engenharia social.

Dictionary Attack:

Um arquivo de dicionário é carregado no aplicativo de cracking que é executado em contas de usuário

Brute-Force Attack:

O programa tenta todas as combinações de caracteres até que a senha seja quebrada

Rule-based:

Este ataque é usado quando o invasor obtém alguma informação sobre a senha

Online Tools to Search Default Passwords:
https://www.fortypoundheod.com 
https://cirt.net
http://www.defaultpassword.us 
https://www.rauterpasswards.com 
https://default-password.info 
https://192-168-1-lip.mobi 


Active Online Attacks:

■ Ataque de dicionário
Neste tipo de ataque, um arquivo de dicionário é carregado em um aplicativo de cracking que é executado em contas de usuários. Este dicionário é um arquivo de texto que 
contém várias palavras de dicionário comumente usadas como senhas. O programa usa todas as palavras presentes no dicionário para encontrar a senha. Além de um dicionário 
padrão, os dicionários de um invasor contêm entradas com números e símbolos adicionados às palavras (por exemplo, "3 de dezembro! 962"}. Rolos simples de dedos no teclado 
("qwer0987"}, que muitos acreditam produzir senhas aleatórias e seguras, são incluídos em tal dicionário. Ataques de dicionário são mais úteis do que ataques de força 
bruta, no entanto, os primeiros não podem ser realizados em sistemas que usam senhas. 

Este ataque é aplicável em duas situações:

o Em criptoanálise, para descobrir a chave de descriptografia para obter o texto simples de um texto cifrado

o Em segurança de computador, para ignorar a autenticação e acessar o mecanismo de controle do computador adivinhando senhas

Métodos para melhorar o sucesso de um ataque de dicionário:

o Uso de vários dicionários diferentes, como dicionários técnicos e estrangeiros, o que aumenta o número de possibilidades

o Uso de manipulação de strings junto com o dicionário (por exemplo, se o dicionário contém a palavra "system", a manipulação de strings cria anagramas como "metsys",
entre outros}

Brute-Force Attack:

• Ataque de força bruta:
Em um ataque de força bruta, os invasores tentam todas as combinações de caracteres até que a senha seja quebrada. Algoritmos criptográficos devem ser suficientemente 
reforçados para evitar um ataque de força bruta, que é definido pela RSA da seguinte forma: "Busca exaustiva de chaves, ou busca de força bruta, é a técnica básica para 
tentar todas as chaves possíveis até que a chave correta seja identificada."
Um ataque de força bruta é quando alguém tenta produzir todas as chaves de criptografia para dados para detectar as informações necessárias. Mesmo hoje, apenas aqueles 
com poder de processamento suficiente poderiam executar com sucesso esse tipo de ataque.
A criptoanálise é um ataque de força bruta na criptografia que emprega uma busca do espaço de chaves. Em outras palavras, testar todas as chaves possíveis é uma das 
tentativas de recuperar o texto simples usado para produzir um texto cifrado específico. A detecção de uma chave ou texto simples que seja mais rápido do que um ataque de
 força bruta é uma maneira de quebrar a cifra. Uma cifra é segura se não houver nenhum método para quebrá-la além de um ataque de força bruta. Em geral, todas as cifras 
 são deficientes em prova matemática de segurança. Se o usuário escolher chaves aleatoriamente ou pesquisar aleatoriamente, o texto simples ficará disponível em média 
 depois que o sistema tiver tentado metade de todas as chaves possíveis.
Algumas das considerações para ataques de força bruta são as seguintes:
o É um processo demorado
o Todas as senhas serão eventualmente encontradas

• Ataque baseado em regras:
Os invasores usam esse tipo de ataque quando obtêm alguma informação sobre a senha. Este é um ataque mais poderoso do que ataques de dicionário e força bruta porque o 
cracker sabe o tipo de senha. Por exemplo, se o invasor sabe que a senha contém um número de dois ou três dígitos, ele/ela pode usar algumas técnicas específicas para 
extrair a senha rapidamente.
Ao obter informações úteis, como o método em que números e/ou caracteres especiais foram usados ​​e o comprimento da senha, os invasores podem minimizar o tempo 
necessário para quebrar a senha e, portanto, aprimorar a ferramenta de cracking. Esta técnica envolve força bruta, um dicionário e ataques de sílaba.

Para ataques de quebra de senha online, um invasor às vezes usará uma combinação de força bruta e dicionário. Essa combinação se enquadra nas categorias de ataques de 
quebra de senha híbridos e silábicos.
o Ataque Híbrido:

Esse tipo de ataque depende do ataque de dicionário. Frequentemente, as pessoas mudam suas senhas apenas adicionando alguns números às suas senhas antigas. Nesse caso, o 
programa adicionaria alguns números e símbolos às palavras do dicionário para tentar quebrar a senha. Por exemplo, se a senha antiga for "system", então há uma chance de 
que a pessoa a altere para "systeml" ou "system2".

Ataque de sÃ­laba:
Os hackers usam essa tÃ©cnica de cracking quando as senhas nÃ£o sÃ£o palavras conhecidas. Os invasores usam o dicionario e outros mÃ©todos para quebra-las, bem como todas
 as combinaÃ§Ãµes possÃ­veis delas.

Ataque de pulverização de senha:
O ataque de pulverização de senha tem como alvo várias contas de usuário simultaneamente usando uma ou um pequeno conjunto de senhas comumente usadas. Ao contrário dos 
ataques de força bruta, que têm como alvo apenas contas de usuário específicas, um ataque de pulverização de senha tem como alvo todos os usuários dentro de um grupo de 
trabalho específico. Para executar esse ataque, os invasores se concentram principalmente em explorar a política de bloqueio de conta, que permite que os usuários usem 
várias senhas por um determinado período ou um certo número de tentativas antes que suas contas sejam bloqueadas. Os invasores inicialmente tentam uma única senha 
comumente usada em várias contas simultaneamente e esperam pela resposta antes de iniciar outra tentativa de senha nas mesmas contas. Eles continuam esse processo 
enquanto permanecem abaixo do limite de bloqueio para que possam tentar um grande número de senhas sem serem afetados por mecanismos de bloqueio automático. A 
pulverização de senha pode ser realizada em diferentes estágios por meio de portas comuns, como MSSQL (1433/TCP), SSH (22/TCP), FTP (21/TCP), SMB (445/TCP), Telnet (23/
TCP) e Kerberos (88/TCP).

CrackMapExec
Fonte: https://github.com
Os invasores usam a ferramenta CrackMapExec para automatizar o processo de quebra de senhas de um domínio inteiro ou senhas
de membros de um grupo de trabalho usando um pequeno conjunto de

senhas usadas armazenadas em um arquivo .txt. O comando a seguir executa o toai CrackMapExec com as senhas armazenadas no arquivo passwords.txt:
crackmapexec smb <IP> -u users.txt -p passwords.txt
Execute o comando a seguir para verificar se o bloqueio ocorreu durante o processo de pulverização:
spray.sh -smb <targetIP> <usernameList> <passwordList>
<AttemptsPerLockoutPeriod> <LockoutPeriodinMinutes> <DOMAIN>

A seguir estão alguns ataques adicionais de pulverização de senha:

o	Kerbrute (https://github.com)
o	lnvoke-DomainPasswordSpray (https://github.com)
o	Spray (https://github.com)
o	Omnispray (https://github.com)

Ataque de Máscara:
O ataque de máscara é semelhante aos ataques de força bruta, mas recupera senhas de hashes com um conjunto mais específico de caracteres com base em informações 
conhecidas pelo invasor. Os ataques de força bruta consomem tempo porque o invasor tenta todas as combinações possíveis de caracteres para quebrar a senha. Em contraste, 
em um ataque de máscara, o invasor usa um padrão de senha para restringir a lista de senhas possíveis e reduzir o tempo de quebra.

hashcat:
Fonte: https://hashcat.net
Os invasores usam a ferramenta hashcat para executar ataques de senha, como ataques de força bruta, ataques de dicionário e ataques de máscara. Para executar ataques de 
máscara, um invasor deve saber os sinalizadores usados ​​para o charset integrado, charset personalizado e modo de ataque para criar um padrão apropriado para a senha.

Charsets integrados
O seguinte charset integrado ajuda a especificar o tipo de caractere a ser usado:
• ?l = abcdefghijklmnopqrstuvwxyz
• ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ
• ?d = 0123456789
• ?h = 0123456789abcdef
• ?H = 0123456789ABCDEF
• ?s = «space» ! 11 #$%&' () *+, -. /: ;<=>?@ [\] "_ '{I}~
• ?a = ?l?u?d?s
- 0xff
?b = 0x00

Charset personalizado
Um charset personalizado é usado em situações em que o invasor não tem certeza sobre o tipo de caractere em um espaço reservado específico:

	-1 abcdefghijklmnopqrstuvwxyz0123456789
	-1 abcdefghijklmnopqrstuvwxyz?d
	-1 ?10123456789
	-1 ?l?d

Modo Hash
Os invasores usam o sinalizador -m com hashcat para especificar o modo hash, ou seja, o tipo de hash a ser quebrado, como MDS, NTML ou SHA256. 

Execute o comando a seguir para quebrar senhas que contenham seis caracteres, em que os três primeiros são letras minúsculas e os três últimos caracteres são números. O 
padrão de senha parece ser ?l ?l ?l ?d?d?d.
hashcat -a 3 -m O md5 hashes.txt ?l?l?l?d?d?d

- a  Especifica o modo de ataque, que é 3 aqui {ataque de força bruta)
- m Especifica o tipo de hash, que é O aqui {MDS)

Execute o comando a seguir para quebrar senhas com oito caracteres de comprimento, onde o primeiro caractere é uma letra maiúscula ou minúscula, os últimos quatro 
caracteres são dígitos, os dois primeiros dígitos são 1 e 9 e os caracteres restantes são letras minúsculas.
hashcat -a 3 -m O md5 hashes.txt -1 ?l?u ?1?1?1?119?d?d
-1 ?l ?u ➔ Especifica que o caractere é um alfabeto maiúsculo ou minúsculo
Para quebrar um hash de senha de comprimento desconhecido, use o sinalizador --increment fornecendo o comprimento máximo e mínimo da senha.
hashcat -m O -a 3 -i --increment-min=6 --increment-max=lO 53ab0dff8ecc7d5a18b4416d00568f02 ?l?l?l?l?l?l?l?l?l?l
--increment-min=6 ➔ O comprimento mínimo da senha é 6
--increment-max=lO ➔ O comprimento máximo da senha é 10

Adivinhação de senha
Adivinhação de senha é uma técnica de quebra de senha que envolve tentar fazer logon no sistema alvo com senhas diferentes manualmente. Adivinhação é o elemento-chave da 
quebra manual de senha. O invasor cria uma lista de todas as senhas possíveis a partir das informações coletadas por meio de engenharia social ou qualquer outro método e 
as tenta manualmente na máquina da vítima para quebrá-las.

A seguir estão as etapas envolvidas na adivinhação de senhas:

o Encontre um usuário válido
o Crie uma lista de senhas possíveis
o Classifique as senhas de alta para baixa probabilidade
o Digite cada senha, até que a senha correta seja descoberta

Hackers podem quebrar senhas manualmente ou usando ferramentas, métodos e algoritmos automatizados. Eles também podem automatizar a quebra de senhas usando um loop FOR 
simples ou criar um arquivo de script que tenta cada senha em uma lista. Essas técnicas ainda são consideradas quebra manual. A taxa de falha desse tipo de ataque é alta.

Algoritmo de quebra de senha manual
Em sua forma mais simples, esse algoritmo pode automatizar a adivinhação de senhas usando um loop FOR simples. No exemplo a seguir, um invasor cria um arquivo de texto 
simples com nomes de usuários e senhas e os itera usando o loop FOR.
O loop FOR principal pode extrair os nomes de usuários e senhas do arquivo de texto, que serve como um dicionário à medida que itera em cada linha:

[file: credentials.txt] 
administrator "" administrator 
password administrator 
administrator [Etc.] 

Digite os seguintes comandos para acessar o arquivo de texto de um diretório:


c:\>FOR /F tokens=l,2* 11 %i in (credentials.txt)"
More? do net use \\victim.com\IPC$ %j /u:victim.com\%i" 
More? 2>>nul" 
More? && echo %time% %date% >> outfile.txt" 
More? && echo \\victim.com acct: %i pass: %j >> outfile.txt 
c:\>type outfile.txt 

O arquivo outfile.txt contém o nome de usuário e a senha corretos, se o nome de usuário e a senha em credentials.txt estiverem corretos. Um invasor pode estabelecer uma 
sessão aberta com o servidor da vítima usando seu sistema.
Senhas padrão
As senhas padrão são aquelas fornecidas pelos fabricantes com novos equipamentos (por exemplo, switches, hubs, roteadores). Normalmente, as senhas padrão fornecidas pelos 
fabricantes de dispositivos protegidos por senha permitem que o usuário acesse o dispositivo durante a configuração inicial e, em seguida, altere a senha. No entanto, 
muitas vezes um administrador se esquece de definir a nova senha ou ignora a recomendação de alteração de senha e continua usando a senha original. Os invasores podem 
explorar esse lapso e encontrar a senha padrão para

